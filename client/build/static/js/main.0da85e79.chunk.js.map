{"version":3,"sources":["logo.svg","Components/User/IndivStore/PaymentOverlay.js","Components/User/HomeLogin/Register.js","Components/User/HomeLogin/Login.js","Components/User/Home.js","Components/User/Navbar/Navbar.js","Components/User/Footer/Footer.js","Components/Merchant Home/Navbar/Navbar.js","Components/Merchant Home/HomeLogin/Register.js","Components/Merchant Home/HomeLogin/Login.js","Components/Merchant Home/Home.js","Components/Merchant Home/Footer/Footer.js","Components/User/TimeLine/EachMerchant/EachMerchant.js","Components/User/OrderHistory/OrderDetails/OrderDetails.js","Components/User/OrderHistory/OrderHistory.js","Components/User/IndivStore/IndivListing.js","Components/User/IndivStore/Basket.js","Components/User/IndivStore/CheckoutForm.js","Components/User/IndivStore/ListingContainer.js","Components/User/TimeLine/TimeLine.js","Components/User/GeoLocation/GeoLocation.js","Components/User/Footer/LoggedInFooter.js","Components/User/Navbar/LoggedInNavBar.js","Components/User/UserSuperContainer.js","Components/Merchant/ItemList/Toggle/Toggle.js","Components/Merchant/ItemList/ItemList.js","Components/Merchant/CreateItem/CreateItem.js","Components/Merchant Home/Edit/EditForm.js","Components/Merchant Home/AllOrders/Sort.js","Components/Merchant Home/Edit/EditContainer.js","Components/Merchant Home/AllOrders/IndivOrder.js","Components/Merchant Home/AllOrders/OrderList.js","Components/Merchant Home/AllOrders/OrderListContainer.js","Components/Merchant Home/MerchantSuperContainer.js","Components/Merchant Home/Navbar/LogedInNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PaymentOverlay","props","state","revenue","cart","count","price","quantity","user_id","handleSubmit","bind","event","preventDefault","data","FormData","console","log","fetch","method","headers","body","JSON","stringify","loadStripe","this","stripper","name","style","maxWidth","margin","action","type","value","merchant_id","listing_id","React","Component","Register","onChange","e","setState","target","onSubmit","username","password","email","then","res","json","userId","userName","registered","onRegistered","catch","err","className","display","displaysignup","placeholder","Login","login","onLogin","displaylogin","Home","Navbar","changePage","onClick","onClickSignUp","onClickLogin","Footer","address","uen","postalCode","cuisine","merchantId","merchantUsername","MercOnRegistered","height","width","resize","MercOnLogin","EachMerchant","calculateTimeLeft","uploadTime","Date","time","setMinutes","getMinutes","difference","timeLeft","hours","Math","floor","minutes","seconds","useState","setTimeLeft","useEffect","setTimeout","timerComponents","Object","keys","forEach","interval","push","length","key","index","children","OrderDetails","details","receipt_id","total","map","order","parseInt","reduce","acc","val","OrderHistory","orderHistory","persist","withRouter","IndivListing","addToCart","item_name","discPrice","src","alt","originalPrice","discount","Checkout","stripe","useStripe","elements","useElements","a","cardElement","getElement","CardElement","createPaymentMethod","card","error","paymentMethod","disabled","ListingContainer","merchant_name","merchant_img","html","result","viewCart","checkout","navigateTo","handleAddToCart","handleRemoveFromCart","handleCheckOut","item","filter","element","localStorage","setItem","prevState","product","productAlreadyInCart","format","prevProps","array","price_ceiling","unit_price","stripePromise","TimeLine","timeLine","merchantCard","eachCard","price_floor","path","to","duration","time_limit_min","merchant_Id","routeArray","render","onLogout","GeoLocation","latUser","lonUser","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","id","UserSuperContainer","Toggle","toggleSwitch","enabled","onToggle","boolean","togglerClasses","classnames","ItemList","toggleOnclickHandler","text","list","itemList","category_id","description","live","CreateItem","Form","Row","Label","column","lg","Col","Control","as","custom","Button","EditForm","time_limit","Sort","for","optionChoice","IndivOrder","order_id","date","OrderList","searchResult","ordersResult","formattedResult","message","sort","sortMe","sortedhtml","date_created","category","b","nextProps","OrderListContainer","onChangeSort","realDisplay","query","App","alternate","displayOverlaySignUp","displayOverlayLogin","alternate2","optionsChoice","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0da85e79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport axios from 'axios';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { CardElement } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nexport default class PaymentOverlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      revenue: this.props.cart[0].count / 2 * this.props.cart[0].price,\n      quantity: this.props.cart[0].count / 2,\n      user_id: 1\n\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(\"submission\");\n\n    console.log(data)\n\n    fetch('/submitOrder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper)\n\n    return (\n      <div>\n        <h1>Order Summary</h1>\n        <p>{this.props.cart[0].name}</p>\n        <p>quantity {this.props.cart[0].count / 2}</p>\n        <p>Total: {this.props.cart[0].count / 2 * this.props.cart[0].price}</p>\n\n        <form style={{ maxWidth: \"300px\", margin: \"0 auto\" }} action=\"/submitOrder\" method=\"POST\">\n\n\n          <input type=\"hidden\" value={this.props.cart[0].merchant_id} name=\"merchant_id\" />\n          <input type=\"hidden\" value={this.state.user_id} name=\"user_id\" />\n          <input type=\"hidden\" value={this.props.cart[0].price} name=\"price\" />\n          <input type=\"hidden\" value={this.props.cart[0].listing_id} name=\"listing_id\" />\n          <input type=\"hidden\" value={this.state.quantity} name=\"quantity\" />\n          <input type=\"hidden\" value={this.state.revenue} name=\"revenue\" />\n\n          <input type=\"submit\" value=\"submit\" />\n        </form>\n\n      </div>\n    );\n  }\n}","import React, { Component } from 'react'\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n    onChange=(e)=> {\n         this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    onSubmit=(e)=> {\n         e.preventDefault();\n         const { username, password, email } = this.state;\n             const data = {\n                  username,\n                  password,\n                  email,\n                };\n         fetch('/home/register/user',{\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data),\n        }).then(res=>\n            res.json()\n        ).then(res=> {\n            console.log(res)\n            // if the user acctually successfully registered\n            if(res.userId && res.userName) {\n                let registered = this.props.onRegistered;\n                registered(res.userId, res.userName);\n            }\n        }).catch(err=> {\n            console.log(err)\n          })\n    }\n    render() {\n        return (\n            <div className=\"login-overlay\" style={{display: this.props.displaysignup}}>\n                <div className=\"formsParent\">\n                <div>Sign Up as a New User</div>\n                <form onSubmit={this.onSubmit} className=\"forms\" >\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"submit\" value =\"Submit\"/>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n    }\n    onChange=(e)=> {\n         this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    onSubmit=(e)=> {\n         e.preventDefault();\n         const { username, password } = this.state;\n             const data = {\n                  username,\n                  password\n                };\n         fetch('/home/login/user',{\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data),\n        }).then(res=>\n            res.json()\n        ).then(res=> {\n            // if the user acctually successfully registered\n            if(res.userId && res.userName) {\n                let login = this.props.onLogin\n                login(res.userId, res.userName)\n            }\n        }).catch(err=> {\n            console.log(err)\n          })\n    }\n    render() {\n        return (\n            <div className=\"login-overlay\" style={{display: this.props.displaylogin}}>\n                <div className=\"formsParent\">\n                <div>User Login</div>\n                <form onSubmit={this.onSubmit} className=\"forms\" >\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"submit\" value =\"Submit\"/>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport Register from './HomeLogin/Register'\nimport Login from './HomeLogin/Login'\n\nconst Home =({displaysignup, displaylogin, onRegistered, onLogin}) => {\n    return (\n        <div className=\"hero\">\n            <Register\n                displaysignup={displaysignup}\n                onRegistered={onRegistered}\n                />\n            <Login\n            displaylogin={displaylogin}\n            onLogin={onLogin}\n            />\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react'\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div>Image here</div>\n                <select className=\"options\" onChange={this.props.changePage}>\n                    <option value=\"user\">User</option>\n                    <option value=\"merchant\">Merchant</option>\n                </select>\n                <div className=\"login break\" onClick={this.props.onClickSignUp}>Sign up</div>\n                <div className=\"login\" onClick={this.props.onClickLogin}>Login</div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div>User login page</div>\n                <br/>\n                <div>options here</div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div>Image here</div>\n                <select className=\"options\" onChange={this.props.changePage}>\n                    <option value=\"merchant\">Merchant</option>\n                    <option value=\"user\">User</option>\n                </select>\n                <div className=\"login break\" onClick={this.props.onClickSignUp}>Sign up</div>\n                <div className=\"login\" onClick={this.props.onClickLogin}>Login</div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            address: \"\",\n            postalCode: \"\",\n            uen: \"\",\n            cuisine: \"\"\n        }\n    }\n    onChange=(e)=> {\n         this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    onSubmit=(e)=> {\n         e.preventDefault();\n         const { name, password, email, address, uen, postalCode, cuisine } = this.state;\n             const data = {\n                  name,\n                  password,\n                  email,\n                  address,\n                  postalCode,\n                  uen,\n                  cuisine,\n                };\n         fetch('/home/register/merchant',{\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data),\n        }).then(res=>\n            res.json()\n        ).then(res=> {\n            // if the merchant acctually successfully registered\n            if(res.merchantId && res.merchantUsername) {\n                let registered = this.props.MercOnRegistered;\n                registered(res.merchantId, res.merchantUsername);\n            }\n        }).catch(err=> {\n            console.log(err)\n          })\n    }\n    render() {\n        return (\n            <div className=\"login-overlay\" style={{display: this.props.displaysignup}}>\n                <div className=\"formsParent\" style={{height: \"250px\"}}>\n                <div>Sign Up as a New Merchant</div>\n                <form onSubmit={this.onSubmit} className=\"forms\" >\n                    <input type=\"text\" name=\"name\" placeholder=\"username\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.onChange}/>\n                    <br/>\n                    <textarea style={{width: \"145px\", resize: \"none\"}} type=\"text\" name=\"address\" placeholder=\"Address\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"text\" name=\"postalCode\" placeholder=\"Postal Code\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"text\" name=\"uen\" placeholder=\"UEN\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"text\" name=\"cuisine\" placeholder=\"Cuisine\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"submit\" value =\"Submit\"/>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"\",\n            password: \"\"\n        }\n    }\n    onChange=(e)=> {\n         this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    onSubmit=(e)=> {\n         e.preventDefault();\n         const { name, password } = this.state;\n             const data = {\n                  name,\n                  password\n                };\n         fetch('/home/login/merchant',{\n            method: \"POST\",\n            headers: {\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(data),\n        }).then(res=>\n            res.json()\n        ).then(res=> {\n            // if the user acctually successfully registered\n            console.log(res)\n            if(res.merchantId && res.merchantUsername) {\n                let login = this.props.MercOnLogin\n                login(res.merchantId, res.merchantUsername)\n            }\n        }).catch(err=> {\n            console.log(err)\n          })\n    }\n    render() {\n        return (\n            <div className=\"login-overlay\" style={{display: this.props.displaylogin}}>\n                <div className=\"formsParent\">\n                <div>Merchant Login</div>\n                <form onSubmit={this.onSubmit} className=\"forms\" >\n                    <input type=\"text\" name=\"name\" placeholder=\"Username\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.onChange}/>\n                    <br/>\n                    <input type=\"submit\" value =\"Submit\"/>\n                </form>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport MercRegister from './HomeLogin/Register'\nimport MercLogin from './HomeLogin/Login'\n\nconst Home =({displaysignup, displaylogin, MercOnRegistered, MercOnLogin}) => {\n    return (\n        <div className=\"hero\">\n            <MercRegister\n                displaysignup={displaysignup}\n                MercOnRegistered={MercOnRegistered}\n                />\n            <MercLogin\n            displaylogin={displaylogin}\n            MercOnLogin={MercOnLogin}\n            />\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div>Merchant Login page</div>\n                <br/>\n                <div>options here</div>\n            </div>\n        )\n    }\n}","import React, { useEffect, useState } from 'react'\n\nexport default function EachMerchant(props) {\n\n    // console.log(props.duration);\n    // console.log(props.time);\n    // console.log(+props.duration - Math.floor((new Date(props.time) / 1000 / 60) % 60))\n\n    const calculateTimeLeft = () => {\n        const uploadTime = new Date(props.time)\n        uploadTime.setMinutes(uploadTime.getMinutes() + 300)\n        const difference = +uploadTime - +new Date();\n        let timeLeft = {};\n        if (difference > 0) {\n            timeLeft = {\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n                minutes: Math.floor((difference / 1000 / 60) % 60),\n                seconds: Math.floor((difference / 1000) % 60)\n            };\n        }\n        return timeLeft\n    };\n\n    // componentDidMount() {\n    //     fetch('/timeline')\n    //         .then(res => res.json())\n    //         .then(res => {\n    //             console.log(res)\n\n    //         })\n    // }\n\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n    useEffect(() => {\n        setTimeout(() => {\n            setTimeLeft(calculateTimeLeft());\n        }, 1000);\n    });\n\n    const timerComponents = [];\n\n\n    Object.keys(timeLeft).forEach((interval) => {\n        if (!timeLeft[interval]) {\n            return;\n        }\n\n        timerComponents.push(\n            <span>\n                {timeLeft[interval]} {interval}{\" \"}\n            </span>\n        );\n    });\n\n\n    return (\n        <>\n            {\n                timerComponents.length ? <div key={props.index}>\n                    <h1>{props.children}</h1> {timerComponents}</div> : null\n            }\n        </>\n    )\n}","import React, { Component } from 'react'\r\n\r\nexport default class OrderDetails extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            details: [],\r\n            fetch: false,\r\n            receipt_id: props.receipt_id\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/all/listing', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ receipt_id: this.state.receipt_id })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                // console.log(res)\r\n                this.setState({\r\n                    details: res,\r\n                    fetch: true\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const price = this.state.details.map((order) => {\r\n            let total = parseInt(order.price) * parseInt(order.quantity)\r\n            // console.log(total)\r\n            total += parseInt(total)\r\n            return total\r\n        })\r\n\r\n        const total = price.reduce(function (acc, val) { return acc + val }, 0)\r\n        return (\r\n            <div>\r\n                { total}\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport OrderDetails from './OrderDetails/OrderDetails'\nimport {withRouter} from 'react-router-dom'\n\nclass OrderHistory extends Component {\n    constructor() {\n        super()\n        this.state = {\n            orderHistory: [],\n            fetch: false\n        }\n    }\n\n    componentDidMount() {\n        fetch('/orderhistory')\n            .then((res) => res.json())\n            .then(res => this.setState({\n                orderHistory: res,\n                fetch: true\n            }))\n    }\n\n    // componentWillUnmount() {\n    //     this.setState({\n    //         fetch: false\n    //     })\n    // }\n    render() {\n\n        const orderHistory = this.state.orderHistory.map((orderHistory, index) => {\n            return (<div>\n                <div key={index}>{orderHistory.receipt_id}\n                    {orderHistory.name} {orderHistory.cuisine}</div>\n                <OrderDetails receipt_id={orderHistory.receipt_id} />\n                <button onClick={(e) => {\n                    e.persist()\n                    e.preventDefault()\n                }}\n                >Order Again</button>\n            </div>)\n        })\n\n        return (\n            <div className='orderHistoryWrapper'>\n                {/* {orderHistory} */}\n                {this.state.fetch ? orderHistory : null}\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(OrderHistory)","import React from 'react';\n\n\nconst IndivListing = (props) => {\n\n    const addToCart = {name:props.item_name,price: props.discPrice,merchant_id:props.merchant_id, listing_id:props.listing_id} ;\n\n    return (\n\n        <div className=\"IndivListing\">\n        <img src=\"https://source.unsplash.com/-1GEAA8q3wk/100x100\"alt=\"img\"/>\n        <h4>{props.item_name}</h4>\n        <p>quantity: {props.quantity}</p>\n        <p>original price: {props.originalPrice}</p>\n        <p>discount: {props.discount*100}%</p>\n        <p>Final Price: {props.discPrice}</p>\n        <button value ={props.listing_id} name='add' onClick={(e)=>{\n                    e.persist()\n                    props.onClick (e,addToCart)\n\n\n                }}>Add to Cart</button>\n        </div>\n        )\n}\n\nexport default IndivListing","import React from 'react';\n\nexport default class Basket extends React.Component {\n\n    render() {\n        const cartItems = this.props.cart;\n\n        return(\n            <>\n            <div>\n            {cartItems.length===0? \"Basket is Empty\": <div> You have{cartItems.length} items in your basket </div>}\n            </div>\n          <div>\n          {cartItems.length> 0? <ul>{cartItems.map((item,index) =>{\n            return <li key={index}>Item:{item.name}\n            x {item.count/2} Price: {item.price} <button\n            onClick={(e)=>{\n                    e.persist()\n                    this.props.handleRemoveFromCart(e,item)\n                }}>\n            Delete</button>\n\n                </li>\n        })}</ul> : <div>Start adding items!</div>}\n            </div>\n            </>\n        )\n    }\n}","import React from 'react'\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\n\r\nexport default function Checkout(props) {\r\n\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit = async (event) => {\r\n        // Block native form submission.\r\n        event.preventDefault();\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not loaded yet. Make sure to disable\r\n            // form submission until Stripe.js has loaded.\r\n            return;\r\n        }\r\n\r\n        // Get a reference to a mounted CardElement. Elements knows how\r\n        // to find your CardElement because there can only ever be one of\r\n        // each type of element.\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        // Use your card Element with other Stripe.js APIs\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: cardElement,\r\n        });\r\n\r\n        if (error) {\r\n            console.log('[error]', error);\r\n        } else {\r\n            console.log('[PaymentMethod]', paymentMethod);\r\n            fetch('/submitOrder', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    card: paymentMethod,\r\n                    order: props.data\r\n                })\r\n            })\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form style={{ maxWidth: \"500px\", margin: \"0 auto\" }} onSubmit={handleSubmit}>\r\n            <CardElement />\r\n            <button type=\"submit\" disabled={!stripe}>\r\n                Pay\r\n        </button>\r\n        </form>\r\n    );\r\n}\r\n","import React from 'react';\nimport IndivListing from './IndivListing';\nimport Basket from './Basket';\nimport CheckoutForm from './CheckoutForm';\nimport PaymentOverlay from './PaymentOverlay';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js'\n\nexport default class ListingContainer extends React.Component {\n    constructor(props) {\n        //mounting\n        super(props)\n        console.log(\"----inside Listing constructor\")\n\n        this.state = {\n            merchant_id: props.merchant_id,\n            merchant_name: \"\",\n            merchant_img: \"\",\n            html: [],\n            result: [],\n            cart: [],\n            viewCart: false,\n            checkout: false\n        }\n\n        this.addToCart = this.addToCart.bind(this);\n        this.navigateTo = this.navigateTo.bind(this)\n        this.handleAddToCart = this.handleAddToCart.bind(this)\n        this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n        this.handleCheckOut = this.handleCheckOut.bind(this)\n\n    }\n    //\n\n\n\n\n    //payment click handlling\n    handleCheckOut() {\n        this.setState({ checkout: true })\n\n    }\n\n\n\n\n\n    //delete from cart\n    handleRemoveFromCart(e, item) {\n        this.setState(state => {\n            const cart = state.cart.filter(element => element.name != item.name);\n            localStorage.setItem('cart', cart);\n            return { cart }\n        })\n    }\n\n\n    //add to cart button\n    addToCart(e, addToCart) {\n        console.log(addToCart)\n        this.setState((prevState) =>\n            ({ cart: [...prevState.cart, addToCart] }))\n    }\n\n\n    // view cart button\n    navigateTo() {\n        this.setState({ viewCart: !this.state.viewCart })\n    }\n\n    handleAddToCart(e, product) {\n        console.log(product)\n\n        this.setState(state => {\n            const cart = state.cart;\n            let productAlreadyInCart = false;\n            cart.forEach(item => {\n                if (item.name === product.name) {\n                    productAlreadyInCart = true;\n                    item.count++;\n                }\n            });\n            if (!productAlreadyInCart) {\n                cart.push({ ...product, count: 1 })\n            }\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\n            return cart;\n            console.log(this.state.cart)\n        })\n    }\n\n\n\n    //when state is changed, FETCH results from aPI\n    //side effects ie: HTTP requests are allowed here\n    componentDidMount() {\n        fetch(`/indivshop/${this.state.merchant_id}`)\n            .then(res => res.json())\n            .then(res =>\n                this.setState({ result: res, html: this.format(res), merchant_name: res[0].name })\n            )\n    }\n\n\n    //update and re-render once checkout is clicked and this.state.checkout=true;\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.checkout !== this.state.checkout) {\n            return <PaymentOverlay />\n        }\n    }\n\n\n\n    //helper functions\n\n    //take the res.json and convert into nice HTML\n    format(array) {\n        return array.map((item, index) => {\n            let item_name = item.item_name;\n            let quantity = item.quantity;\n            let discPrice = item.price_ceiling;\n            let originalPrice = item.unit_price;\n            let discount = (originalPrice - discPrice) / originalPrice\n            let merchant_name = item.name;\n            let cuisine = item.cuisine;\n            let listing_id = item.listing_id;\n            let merchant_id = item.merchant_id\n\n            return <div key={index}>\n                <IndivListing item_name={item_name} quantity={quantity} discPrice={discPrice} originalPrice={originalPrice} discPrice={discPrice} discount={discount} merchant_name={merchant_name} cuisine={cuisine} onClick={this.handleAddToCart} listing_id={listing_id} merchant_id={merchant_id} />\n\n            </div>\n        })\n    }\n\n\n    render() {\n        const stripePromise = loadStripe(this.props.stripper)\n        // if (this.state.checkout) {\n        //     return (\n        //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n\n        //     )\n        // }\n\n\n\n\n        if (this.state.viewCart && this.state.cart[0]) {\n            let data = {\n                merchant_id: this.state.cart[0].merchant_id,\n                //user_id:\n                name: this.state.cart[0].name,\n                user_id: this.state.cart[0].user_id,\n                listing_id: this.state.cart[0].listing_id,\n                price: this.state.cart[0].price,\n                quantity: this.state.cart[0].count / 2,\n                revenue: this.state.cart[0].count / 2 * this.state.cart[0].price\n            }\n            return (\n                <div>\n\n                    <div>\n                        <h1>You are viewing deals from {this.state.merchant_name}</h1>\n                        <br />\n                        <h1>Order Summary</h1>\n                        <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n                            <tr>\n                                <th>Item Name</th>\n                                <th>Quantity</th>\n                                <th>Total</th>\n                            </tr>\n                            <tr>\n                                <td>{this.state.cart[0].name}</td>\n                                <td>{this.state.cart[0].count / 2}</td>\n                                <td>Total: ${this.state.cart[0].count / 2 * this.state.cart[0].price}</td>\n                            </tr>\n                        </table>\n                        <Elements stripe={stripePromise}><CheckoutForm data={data}></CheckoutForm></Elements>\n                    </div>\n                    <div className=\"ListItems\" >\n                        {this.state.html}\n                    </div>\n                </div>\n            )\n\n        } else {\n            return (\n                <>\n                    <button onClick={this.navigateTo}>View Cart {this.state.cart.length}</button>\n                    <h1>You are viewing deals from {this.state.merchant_name}</h1>\n                    <br />\n\n                    <div className=\"ListItems\" >\n                        {this.state.html}\n                    </div>\n\n                </>\n            )\n        }\n    }\n}","import React, { Component } from 'react'\nimport EachMerchant from './EachMerchant/EachMerchant'\nimport OrderHistory from '../OrderHistory/OrderHistory'\nimport {Route, Link, Redirect, Switch} from 'react-router-dom'\nimport IndivListing from '../IndivStore/IndivListing'\nimport ListingContainer from '../IndivStore/ListingContainer'\nexport default class TimeLine extends Component {\n    constructor() {\n        super()\n        this.state = {\n            timeLine: []\n        }\n    }\n    componentDidMount() {\n        fetch('/timeline')\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    timeLine: res\n                })\n            })\n    }\n    render() {\n        const merchantCard = this.state.timeLine.map((eachCard, index) => {\n            const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n            let path = \"/\" + eachCard.merchant_id\n            return <Link to={path}>\n            <div className=\"indMerc\" >\n                <EachMerchant key={index} duration={eachCard.time_limit_min} time={eachCard.time} merchant_Id={eachCard.merchant_id}>\n                    <div>{eachCard.name}</div>\n                    <div>up to{discount}%</div>\n                </EachMerchant>\n            </div>\n            </Link>\n        })\n        const routeArray = this.state.timeLine.map((eachCard, index) => {\n            let path = \"/\" + eachCard.merchant_id\n            return <Route path={path} render={\n                            ()=> <ListingContainer merchant_id={eachCard.merchant_id} />\n                        }/>\n        })\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <div>Image here</div>\n                    <Link className=\"login break\" to=\"/Timeline\">Timeline</Link>\n                    <Link className=\"login break\" to=\"/Orderhistory\">Order history</Link>\n                    <button onClick={this.props.onLogout}>Log out</button>\n                </div>\n                <main>\n                    <Switch>\n                        {routeArray}\n                        <Route path=\"/Orderhistory\" render = {\n                            ()=><OrderHistory />\n                        }/>\n                        <Route path=\"/\" render= {\n                            ()=> <div>{merchantCard}</div>\n                        }/>\n                    </Switch>\n                </main>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport TimeLine from '../TimeLine/TimeLine';\n\n\n\n\nexport default class GeoLocation extends React.Component {\n    constructor(){\n        super()\n        this.state ={\n            latUser: 0,\n            lonUser:0\n        }\n    }\ncomponentDidMount() {\n        if('geolocation' in navigator){\n            console.log('geolocation available');\n            navigator.geolocation.getCurrentPosition(position =>{\n                const lat= position.coords.latitude;\n                const lon= position.coords.longitude;\n                this.setState({latUser: lat, lonUser: lon})\n            })\n        } else {\n            console.log('geolocation not available');\n        }\n    }\n\n\n    render(){\n            return (\n                    <div>\n                    latitude: <span id=\"latitude\">{this.state.latUser}&deg;</span><br/>\n                    longitude: <span id=\"longitude\">{this.state.lonUser}&deg;</span>\n                    <TimeLine lon={this.state.lonUser} lat={this.state.latUser} onLogout={this.props.onLogout} />\n                    </div>\n            )\n\n}\n}","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <div>User login page</div>\n                <br/>\n                <div>options here</div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div>Image here</div>\n                <div className=\"login break\" onClick={this.props.orderHistory}>Order History</div>\n                <div className=\"login break\" onClick={this.props.timeline}>Timeline</div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport OrderHistory from './OrderHistory/OrderHistory'\nimport ListingContainer from './IndivStore/ListingContainer';\nimport GeoLocation from './GeoLocation/GeoLocation';\nimport LoggedInNavBar from './Navbar/LoggedInNavBar'\nimport LoggedInFooter from './Footer/LoggedInFooter'\n\nexport default class UserSuperContainer extends Component {\n    render() {\n        return (\n            <>\n                <GeoLocation onLogout={this.props.onLogout}/>\n                <LoggedInFooter />\n            </>\n        )\n    }\n}","import classnames from 'classnames';\r\nimport React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\n\r\nclass Toggle extends Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            enabled: props.boolean\r\n        }\r\n    }\r\n\r\n\r\n    toggleSwitch = (e) => {\r\n        e.persist();\r\n        e.preventDefault();\r\n        this.setState({ enabled: !this.state.enabled }\r\n        );\r\n        this.props.onToggle(!this.state.enabled, this.props.id)\r\n    }\r\n\r\n    render() {\r\n        const { enabled } = this.state;\r\n\r\n        const togglerClasses = classnames(\r\n            'switch-toggle',\r\n            `switch-toggle--${enabled ? 'on' : 'off'}`\r\n        )\r\n\r\n        return (\r\n            <div className='switch switch--default' onClick={this.toggleSwitch} >\r\n                <div className={togglerClasses}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Toggle;","import React, { Component } from 'react'\nimport Toggle from './Toggle/Toggle'\n\nexport default class ItemList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            list: [],\n            fetch: false\n        }\n    }\n    toggleOnclickHandler = (boolean, id) => {\n        fetch('/togglelisting', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ listing_id: id, boolean: boolean })\n        })\n            .then((res) => res.text())\n            .then((res) => {\n                console.log(res)\n                this.setState({\n                    fetch: !this.state.fetch\n                })\n            })\n    }\n\n    componentDidMount() {\n        fetch('/all/listing/1')\n            .then(res => res.json())\n            .then(res => {\n                // console.log(res);\n                this.setState({\n                    list: res\n                })\n            })\n    }\n\n    render() {\n        // console.log(this.state.list)\n        let itemList = this.state.list.map((item, index) => {\n            return <tr>\n                <td>{item.item_name}</td>\n                <td>{item.unit_price}</td>\n                <td>{item.quantity}</td>\n                <td>{item.price_ceiling}</td>\n                <td>{item.price_floor}</td>\n                <td>{item.category_id}</td>\n                <td>{item.description}</td>\n                <td>{item.time_limit_min}</td>\n                <td><Toggle onToggle={this.toggleOnclickHandler} id={item.listing_id} boolean={item.live}></Toggle></td>\n            </tr>\n        })\n\n        return (\n            <table>\n                <tr>\n                    <th>Item Name</th>\n                    <th>Unit Price</th>\n                    <th>Quantity</th>\n                    <th>Maximum Price</th>\n                    <th>Minimum Price</th>\n                    <th>Category</th>\n                    <th>Description</th>\n                    <th>Duration</th>\n                    <th>Status</th>\n                </tr>\n                {itemList}\n            </table>\n\n\n        )\n    }\n}","import React, { Component } from 'react'\r\nimport { Form, Col, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class CreateItem extends Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Form action=\"/newListing\" method=\"post\">\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Item Name</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"Item Name\" name=\"item_name\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Unit Price</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"Unit Price\" name=\"unit_price\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Quantity</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"Quantity\" name=\"quantity\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Maximum Price</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"maximum price\" name=\"price_ceiling\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Minimum Price</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"minimum price\" name=\"price_floor\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Category</Form.Label>\r\n                    <Col>\r\n                        <Form.Control name=\"category_id\" as=\"select\" custom>\r\n                            <option value=\"1\">Snacks</option>\r\n                            <option value=\"2\">Light Bites</option>\r\n                            <option value=\"3\">Dim Sum</option>\r\n                            <option value=\"4\">Noodles</option>\r\n                            <option value=\"5\">Junk Food</option>\r\n                            <option value=\"6\">Hearty Meals</option>\r\n                            <option value=\"7\">Snacks</option>\r\n                            <option value=\"8\">Light Bites</option>\r\n                            <option value=\"9\">Dim Sum</option>\r\n                            <option value=\"10\">Noodles</option>\r\n                            <option value=\"11\">Junk Food</option>\r\n                            <option value=\"12\">Hearty Meals</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Description</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"Description\" name=\"description\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <br />\r\n                <Form.Row>\r\n                    <Form.Label column lg={2}>Duration</Form.Label>\r\n                    <Col>\r\n                        <Form.Control type=\"text\" placeholder=\"Time in Minutes\" name=\"time_limit_min\" />\r\n                    </Col>\r\n                </Form.Row>\r\n                <Button type=\"submit\" className=\"mb-2\">\r\n                    Submit\r\n                </Button>\r\n                <Col>\r\n                    <Form.Control type=\"hidden\" placeholder=\"Normal text\" name=\"merchant_id\" />\r\n                </Col>\r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { Form, Col, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class EditForm extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n    render() {\n        return (\n            <Form action=\"/editlisting\" method=\"post\">\n                <Form.Row>\n                    <Form.Label column lg={2}>Item Name</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.item_name} name=\"item_name\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Unit Price</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.unit_price} name=\"unit_price\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Quantity</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.quantity} name=\"quantity\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Maximum Price</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.price_ceiling} name=\"price_ceiling\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Minimum Price</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.price_floor} name=\"price_floor\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Category</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.category_id} />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Description</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.description} name=\"description\" />\n                    </Col>\n                </Form.Row>\n                <br />\n                <Form.Row>\n                    <Form.Label column lg={2}>Duration</Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder={this.props.time_limit} name=\"time_limit_min\" />\n                    </Col>\n                </Form.Row>\n                <Button type=\"submit\" className=\"mb-2\">\n                    Submit\n                </Button>\n                <Col>\n                    <Form.Control type=\"hidden\" placeholder=\"Normal text\" name=\"{this.props.merchant_id}\" />\n                </Col>\n            </Form>\n\n        )\n    }\n}","import React from 'react';\n\n\nconst Sort = (props) => {\n    return (\n\n\n\n        <div>\n        <label for=\"sort\">Sort by</label>\n\n        <select name=\"sort\" id=\"sort\" value={props.optionChoice} onChange={props.onChange}>\n          <option value=\"default\">Date</option>\n          <option value=\"name\">Name</option>\n          <option value=\"revenue\">Revenue</option>\n        </select>\n\n        </div>\n        )\n}\n\nexport default Sort;","import React from 'react';\nimport EditForm from './EditForm'\n\n\nclass EditContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            displayEdit: true,\n            listing_id:1,// later change to this.props.listing_id\n              item_name: \"Hawaiian Pizza\",\n              unit_price:10,\n              quantity:10,\n              price_ceiling:8,\n              price_floor:5,\n              category_id:1,\n              merchant_id:6,\n              description:\"Either you hate or u love\",\n              time_limit_min:120,\n        }\n\n    }\n\n\n\n\n\n\n    render(){\n        return (\n            <div>\n            <EditForm listing_id={this.state.item_name} unit_price={this.state.unit_price} quantity={this.state.quantity} price_ceiling={this.state.price_ceiling} price_floor={this.state.price_floor} category_id={this.state.category_id} merchant_id={this.props.merchant_id} description={this.state.description} time_limit_min={this.state.time_limit_min}/>\n            </div>\n\n            )\n    }\n}\n\nexport default EditContainer;","import React from 'react';\n\n\nconst IndivOrder = (props) => {\n    return (\n\n\n\n        <div className=\"IndivOrder\">\n        <h1>Order ID: {props.order_id}</h1>\n        <h4>{props.name}</h4>\n        <p>quantity: {props.quantity}</p>\n        <p>date: {props.date}</p>\n        <p>revenue: {props.revenue}</p>\n\n        </div>\n        )\n}\n\nexport default IndivOrder;","import React from 'react';\nimport IndivOrder from './IndivOrder'\n\n\n\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            searchResult:[], //result from API\n            ordersResult:[],\n            merchant_id: 1,\n            html:\"\"\n        }\n        this.format = this.format.bind(this);\n    }\n\n//set state with props from parent: SEARCH\n    static getDerivedStateFromProps(nextProps,prevState) {\n        //mounting\n        return { sort: nextProps.sort}\n    }\n\n    componentDidMount() {\n        //mounting\n        if(this.props.display) {\n        fetch(\"/merchantorders/\"+this.state.merchant_id)\n        .then(res => res.json())\n        .then(res => {\n            if(res.length < 1){\n                this.setState({html: 'You have no orders yet'})\n            } else {\n                let formattedResult = this.format(res);\n                this.setState({ordersResult: res, html:formattedResult})\n            }\n        })\n        .catch(error => {\n        console.log(\"error happened--- at GET MERCHANT ORDER MOUNT\", error.message)\n    });\n    }\n    }\n\n    //force the page to re-render\n    componentDidUpdate (prevProps) {\n        if(prevProps.sort !== this.props.sort){\n            this.sortMe(this.state.ordersResult, this.state.sort)\n            let sortedhtml = this.format(this.state.ordersResult);\n            this.setState({html: sortedhtml})\n        }\n    }\n\n\n//take the res.json and convert into nice HTML\nformat(array) {\n    return array.map((item,index)=>{\n        let order_id = item.order_id;\n        let price = item.price;\n        let quantity= item.quantity;\n        let name = item.item_name;\n        let date = item.date_created;\n        let revenue = item.revenue;\n\n        return <IndivOrder order_id={order_id} price={price} quantity={quantity} name={name} date={date} revenue ={revenue}  key={index} />\n    })\n}\n\n   // sorts results based on selected category\n\nsortMe(array,category){\n    switch(category){\n        case \"name\":\n        array.sort((a,b)=>{\n            return(b.item_name > a.item_name) ? 1: -1\n        })\n        break;\n    case \"revenue\":\n        array.sort((a,b)=>{\n            return(b.revenue > a.revenue) ? 1: -1\n        })\n        break;\n\n    default:\n            return array;\n\n    }\n}\n\n\n    render(){\n        return (\n            <div>\n            {this.state.html}\n            </div>\n\n            )\n    }\n}\n\nexport default OrderList;","import React from 'react';\nimport Sort from './Sort';\nimport OrderList from './OrderList';\n\n\n\nclass OrderListContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            display: true,\n            sort: \"default\"\n            // realDisplay :this.props.realDisplay, //for integration\n        }\n\n    }\n//set state with props from parent: SEARCH\n    static getDerivedStateFromProps(nextProps,prevState) {\n        //mounting\n        return {realDisplay: nextProps.query}\n    }\n     //on change handler for select SORT\nonChangeSort = (event) =>{\n    let filter = event.target.value;\n    this.setState({sort:filter})\n}\n\n\n    render(){\n\n            if(this.state.display) {\n                return(\n                    <div>\n                    <Sort onChange={this.onChangeSort} optionChoice={this.state.sort}/>\n                    <OrderList display={this.state.display} sort={this.state.sort}/>\n\n                    </div>\n                    )\n\n            }\n\n\n    }\n}\n\nexport default OrderListContainer;","import React, { Component } from 'react'\nimport ItemList from '../Merchant/ItemList/ItemList'\nimport CreateItem from '../Merchant/CreateItem/CreateItem';\nimport EditForm from './Edit/EditForm'\nimport EditContainer from './Edit/EditContainer'\nimport OrderListContainer from './AllOrders/OrderListContainer'\nimport LogedInNavbar from './Navbar/LogedInNavbar'\nimport {Route, Link, Redirect, Switch} from 'react-router-dom'\nexport default class UserSuperContainer extends Component {\n    // When loged in render the dashbard first\n    // Navbar\n        // create item\n        // Item list\n            // Each item(Item List) has one Edit container\n                // inside edit container(EditContainer) is and edit form (EditForm)\n        // Orderlist containers (All orders)\n    render() {\n        return (\n            <>\n                <div className=\"navbar\">\n                    <div>Image here</div>\n                    <Link to=\"/\" className=\"login break\" >Dashboard</Link>\n                    <Link to=\"/ItemList\" className=\"login\" >Item List</Link>\n                    <Link to=\"/CreateItem\" className=\"login\" >Create Item</Link>\n                    <Link to=\"/AllOrders\" className=\"login\" >All Orders</Link>\n                    <button onClick={this.props.onLogout}>Log out</button>\n                </div>\n                <Switch>\n                    <Route path=\"/ItemList\" render= {\n                        ()=><ItemList />\n                    }/>\n                    <Route path=\"/CreateItem\" render= {\n                        ()=><CreateItem />\n                    }/>\n                    <Route path=\"/AllOrders\" render= {\n                        ()=><OrderListContainer />\n                    }/>\n                    <Route path=\"/\" render= {\n                        ()=><div>This here is the merchant dashboard</div>\n                    }/>\n                </Switch>\n            </>\n        )\n    }\n}","import React, { Component } from 'react'\nexport default class LogedInNavbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div>Image here</div>\n                <div className=\"login break\" onClick={this.props.onClickSignUp}>Sign up</div>\n                <div className=\"login\" onClick={this.props.onClickLogin}>Login</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PaymentOverlay from './Components/User/IndivStore/PaymentOverlay';\nimport Home from './Components/User/Home'\nimport Navbar from './Components/User/Navbar/Navbar'\nimport Footer from './Components/User/Footer/Footer'\nimport MercNavbar from './Components/Merchant Home/Navbar/Navbar'\nimport MercHome from './Components/Merchant Home/Home'\nimport MerchFooter from './Components/Merchant Home/Footer/Footer'\nimport GeoLocation from './Components/User/GeoLocation/GeoLocation';\n\nimport UserSuperContainer from './Components/User/UserSuperContainer'\nimport MerchantSuperContainer from './Components/Merchant Home/MerchantSuperContainer'\n\nconst stripper = process.env.REACT_APP_PUBLISHABLE_KEY\n\n\nexport default class App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userId: \"\",\n            userName: \"\",\n            merchantId: \"\",\n            merchantUsername: \"\",\n            optionsChoice: \"User\",\n            displayOverlaySignUp: \"none\",\n            displayOverlayLogin: \"none\",\n            alternate: true,\n            alternate2: true,\n            changePage: \"user\"\n        }\n    }\n    static getDerivedStateFromProps(props, state) {\n        return null\n    }\n\n    componentDidMount() {\n        fetch('/home')\n            .then(res => res.json())\n            .then(res => {\n                // If we are receiving userId and userName\n                if(res.userId && res.userName) {\n                    this.setState({\n                        userId: res.userId,\n                        userName: res.userName\n                    })\n                }\n                if(res.merchantId && res.merchantUsername) {\n                // If we are receiving merchantId and merchantName\n                    this.setState({\n                        merchantId: res.merchantId,\n                        merchantUsername: res.merchantUsername\n                    })\n                }\n            })\n    }\n    onClickSignUp=(e)=> {\n        if(this.state.alternate) {\n            this.setState({\n                displayOverlaySignUp: \"block\",\n                displayOverlayLogin: \"none\",\n                alternate2: true,\n                alternate: false\n            })\n        } else {\n            this.setState({\n                displayOverlaySignUp: \"none\",\n                alternate: true\n            })\n        }\n    }\n    onClickLogin=(e)=> {\n        if(this.state.alternate2) {\n            this.setState({\n                displayOverlayLogin: \"block\",\n                displayOverlaySignUp: \"none\",\n                alternate: true,\n                alternate2: false\n            })\n        } else {\n            this.setState({\n                displayOverlayLogin: \"none\",\n                alternate2: true\n            })\n        }\n    }\n        // PASS THIS 2 THINGS BELOW TO YOUR CHILD COMPONENTS IF YOU NEED THE ID OR USERNAME FOR LOGIN AND REGISTER\n        // userId={this.state.userId} userName={this.state.userName}\n    onRegistered=(id,name)=> {\n            this.setState({\n            userId: id,\n            userName: name\n        })\n    }\n    onLogin=(id,name)=> {\n        this.setState({\n            userId: id,\n            userName: name\n        })\n    }\n    MercOnRegistered=(id,name)=> {\n            this.setState({\n            merchantId: id,\n            merchantUsername: name\n        })\n    }\n    MercOnLogin=(id,name)=> {\n        this.setState({\n            merchantId: id,\n            merchantUsername: name\n        })\n    }\n    changePage=(e)=> {\n        this.setState({\n            changePage: e.target.value\n        })\n    }\n    onLogout=(e)=> {\n        fetch('/logout')\n            .then(res => res.json())\n            .then(res => {})\n        this.setState({\n            merchantId: \"\",\n            merchantUsername: \"\",\n            userId: \"\",\n            userName: \"\"\n        })\n    }\n    render() {\n        // If merchnatID and merchantUsername is present render the merchant dashboard page and pass in their respective data\n        if(this.state.merchantId && this.state.merchantUsername) {\n            return (\n                <MerchantSuperContainer className=\"App MainContainerMerchant\" onLogout={this.onLogout}/>\n                )\n        } else if(this.state.userId && this.state.userName) {\n            // If userId and userName is present, render the timeline page and pass in their respective data\n            return (\n                <UserSuperContainer className=\"App MainContainerUser\" userId={this.state.userId} onLogout={this.onLogout}/>\n            );\n        } else {\n            if(this.state.changePage == 'user') {\n                return (\n                    <div className=\"App\">\n                        <Navbar\n                        onClickSignUp={this.onClickSignUp}\n                        onClickLogin={this.onClickLogin}\n                        changePage={this.changePage}\n                        />\n                        <Home\n                        displaysignup={this.state.displayOverlaySignUp}\n                        displaylogin={this.state.displayOverlayLogin}\n                        onRegistered={this.onRegistered}\n                        onLogin={this.onLogin}\n                        />\n                        <Footer />\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"App\">\n                        <MercNavbar\n                        onClickSignUp={this.onClickSignUp}\n                        onClickLogin={this.onClickLogin}\n                        changePage={this.changePage}\n                        />\n                        <MercHome\n                        displaysignup={this.state.displayOverlaySignUp}\n                        displaylogin={this.state.displayOverlayLogin}\n                        MercOnRegistered={this.MercOnRegistered}\n                        MercOnLogin={this.MercOnLogin}\n                        />\n                        <MerchFooter />\n                    </div>\n\n\n                    )\n            }\n\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n        <BrowserRouter >\n            <App />\n        </BrowserRouter >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}