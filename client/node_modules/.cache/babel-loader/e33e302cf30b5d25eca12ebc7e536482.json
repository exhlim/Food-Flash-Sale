{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js\";\nimport React, { Component } from 'react';\nimport EachMerchant from './EachMerchant/EachMerchant';\nimport OrderHistory from '../OrderHistory/OrderHistory';\nimport { Route, Link, Redirect, Switch } from 'react-router-dom';\nimport IndivListing from '../IndivStore/IndivListing';\nimport ListingContainer from '../IndivStore/ListingContainer';\nexport default class TimeLine extends Component {\n  constructor(props) {\n    super();\n\n    this.testing = (timeleft, merchantID) => {\n      if (timeleft.hours === 0 && timeleft.minutes === 0 && timeleft.seconds === 0) {\n        let timeOut = this.state.timeLine.filter(card => {\n          if (card.merchant_id === merchantID) {\n            return card;\n          }\n        });\n\n        if (timeOut.length > 0) {\n          let newTimeLine = this.state.timeLine;\n          console.log(newTimeLine, `before`);\n          timeOut.forEach(card1 => newTimeLine.splice(newTimeLine.findIndex(card2 => card2.name === card1.name)));\n          console.log(newTimeLine, `after`);\n          this.setState({\n            oldTimeLine: timeOut,\n            newTimeLine: newTimeLine\n          });\n        } else {\n          return;\n        }\n      } else {\n        return;\n      }\n    };\n\n    this.state = {\n      timeLine: [],\n      oldTimeLine: [],\n      newTimeLine: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/timeline').then(res => res.json()).then(res => {\n      // console.log(res);\n      this.setState({\n        timeLine: res,\n        newTimeLine: res\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(`please no`);\n\n    if (this.state.newTimeLine !== this.state.timeLine) {\n      console.log(`here?`);\n      fetch('/timeline').then(res => res.json()).then(res => {\n        // console.log(res);\n        this.setState({\n          timeLine: res\n        });\n      });\n    }\n  }\n\n  // testing = (prop) => {\n  //     let b = Math.floor(Math.random() * 30)\n  //     console.log(b)\n  //     if (b === 4) {\n  //         fetch('/timeline')\n  //             .then(res => res.json())\n  //             .then(res => {\n  //                 console.log(res)\n  //                 this.setState({\n  //                     timeLine: res,\n  //                     fetch: !this.state.fetch\n  //                 })\n  //             })\n  //     }\n  // }\n  render() {\n    // let newArray = this.state.timeLine.map((item, index) => {\n    //     const uploadTime = new Date(item.time)\n    //     uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n    //     let difference = +uploadTime - +new Date();\n    //     if (difference > 0) {\n    //         return item\n    //     }\n    // })\n    // let newerArray = newArray.filter((item) => {\n    //     return item\n    // })\n    this.state.timeLine.sort(function (a, b) {\n      const uploadTimeA = new Date(a.time);\n      uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min);\n      const uploadTimeB = new Date(b.time);\n      uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min);\n      return uploadTimeA - uploadTimeB;\n    }); // console.log(this.state.timeLine, `before splice`)\n\n    if (this.state.timeLine.length > 20) {\n      this.state.timeLine.splice(19, this.state.timeLine.length - 20);\n    } // console.log(this.state.timeLine, `After splice`)\n\n\n    let merchantCard = this.state.timeLine.map((eachCard, index) => {\n      const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100;\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Link, {\n        to: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(EachMerchant, {\n        key: index,\n        duration: eachCard.time_limit_min,\n        listing: eachCard.listing_id,\n        time: eachCard.time,\n        merchant_Id: eachCard.merchant_id,\n        unmount: this.merchantCardUnmountHandler,\n        what: this.testing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, index, eachCard.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"up to\", discount, \"%\")));\n    });\n    const routeArray = this.state.timeLine.map((eachCard, index) => {\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Route, {\n        path: path,\n        render: () => /*#__PURE__*/React.createElement(ListingContainer, {\n          merchant_id: eachCard.merchant_id,\n          stripper: this.props.stripper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Image here\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Timeline\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Orderhistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Order history\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, routeArray, /*#__PURE__*/React.createElement(Route, {\n      path: \"/Orderhistory\",\n      render: () => /*#__PURE__*/React.createElement(OrderHistory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 35\n        }\n      }, merchantCard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js"],"names":["React","Component","EachMerchant","OrderHistory","Route","Link","Redirect","Switch","IndivListing","ListingContainer","TimeLine","constructor","props","testing","timeleft","merchantID","hours","minutes","seconds","timeOut","state","timeLine","filter","card","merchant_id","length","newTimeLine","console","log","forEach","card1","splice","findIndex","card2","name","setState","oldTimeLine","componentDidMount","fetch","then","res","json","componentDidUpdate","render","sort","a","b","uploadTimeA","Date","time","setMinutes","getMinutes","time_limit_min","uploadTimeB","merchantCard","map","eachCard","index","discount","unit_price","price_floor","path","listing_id","merchantCardUnmountHandler","routeArray","stripper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EachMerchant from './EachMerchant/EachMerchant'\nimport OrderHistory from '../OrderHistory/OrderHistory'\nimport { Route, Link, Redirect, Switch } from 'react-router-dom'\nimport IndivListing from '../IndivStore/IndivListing'\nimport ListingContainer from '../IndivStore/ListingContainer'\n\nexport default class TimeLine extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            timeLine: [],\n            oldTimeLine: [],\n            newTimeLine: []\n        }\n    }\n    componentDidMount() {\n        fetch('/timeline')\n            .then(res => res.json())\n            .then(res => {\n                // console.log(res);\n                this.setState({\n                    timeLine: res,\n                    newTimeLine: res\n                })\n            })\n    }\n\n    componentDidUpdate() {\n        console.log(`please no`)\n        if (this.state.newTimeLine !== this.state.timeLine) {\n            console.log(`here?`)\n            fetch('/timeline')\n                .then(res => res.json())\n                .then(res => {\n                    // console.log(res);\n                    this.setState({\n                        timeLine: res\n                    })\n                })\n        }\n    }\n\n    testing = (timeleft, merchantID) => {\n        if (timeleft.hours === 0 && timeleft.minutes === 0 && timeleft.seconds === 0) {\n            let timeOut = this.state.timeLine.filter(card => {\n                if (card.merchant_id === merchantID) {\n                    return card\n                }\n            })\n            if (timeOut.length > 0) {\n                let newTimeLine = this.state.timeLine\n                console.log(newTimeLine, `before`)\n                timeOut.forEach(card1 => newTimeLine.splice(newTimeLine.findIndex(card2 => card2.name === card1.name)))\n                console.log(newTimeLine, `after`)\n                this.setState({\n                    oldTimeLine: timeOut,\n                    newTimeLine: newTimeLine\n                })\n            } else {\n                return\n            }\n\n        } else {\n            return\n        }\n    }\n\n    // testing = (prop) => {\n    //     let b = Math.floor(Math.random() * 30)\n    //     console.log(b)\n    //     if (b === 4) {\n    //         fetch('/timeline')\n    //             .then(res => res.json())\n    //             .then(res => {\n    //                 console.log(res)\n    //                 this.setState({\n    //                     timeLine: res,\n    //                     fetch: !this.state.fetch\n    //                 })\n    //             })\n    //     }\n    // }\n\n\n    render() {\n        // let newArray = this.state.timeLine.map((item, index) => {\n        //     const uploadTime = new Date(item.time)\n        //     uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n        //     let difference = +uploadTime - +new Date();\n        //     if (difference > 0) {\n        //         return item\n        //     }\n        // })\n        // let newerArray = newArray.filter((item) => {\n        //     return item\n        // })\n\n\n        this.state.timeLine.sort(function (a, b) {\n            const uploadTimeA = new Date(a.time)\n            uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min)\n            const uploadTimeB = new Date(b.time)\n            uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min)\n            return uploadTimeA - uploadTimeB\n        })\n        // console.log(this.state.timeLine, `before splice`)\n        if (this.state.timeLine.length > 20) {\n            this.state.timeLine.splice(19, this.state.timeLine.length - 20)\n        }\n        // console.log(this.state.timeLine, `After splice`)\n        let merchantCard = this.state.timeLine.map((eachCard, index) => {\n            const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n            let path = \"/\" + eachCard.merchant_id\n            return <Link to={path}>\n\n                <EachMerchant key={index} duration={eachCard.time_limit_min} listing={eachCard.listing_id} time={eachCard.time} merchant_Id={eachCard.merchant_id} unmount={this.merchantCardUnmountHandler} what={this.testing}>\n                    <div>{index}{eachCard.name}</div>\n                    <div>up to{discount}%</div>\n                </EachMerchant>\n\n            </Link>\n        })\n\n        const routeArray = this.state.timeLine.map((eachCard, index) => {\n            let path = \"/\" + eachCard.merchant_id\n            return <Route path={path} render={\n                () => <ListingContainer merchant_id={eachCard.merchant_id} stripper={this.props.stripper} />\n            } />\n        })\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <div>Image here</div>\n                    <Link className=\"login break\" to=\"/Timeline\">Timeline</Link>\n                    <Link className=\"login break\" to=\"/Orderhistory\">Order history</Link>\n                </div>\n                <main>\n                    <Switch>\n                        {routeArray}\n                        <Route path=\"/Orderhistory\" render={\n                            () => <OrderHistory />\n                        } />\n                        <Route path=\"/\" render={\n                            () => <div>{merchantCard}</div>\n                        } />\n                    </Switch>\n                </main>\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}