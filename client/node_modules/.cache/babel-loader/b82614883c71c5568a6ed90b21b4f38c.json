{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js\";\nimport React, { Component } from 'react';\nimport EachMerchant from './EachMerchant/EachMerchant';\nimport OrderHistory from '../OrderHistory/OrderHistory';\nimport { Route, Link, Redirect, Switch } from 'react-router-dom';\nimport IndivListing from '../IndivStore/IndivListing';\nimport ListingContainer from '../IndivStore/ListingContainer';\nvar fetching = true;\nexport default class TimeLine extends Component {\n  constructor(props) {\n    super();\n\n    this.testing = prop => {\n      if (fetching === true) {\n        fetching = false;\n        setTimeout(() => {\n          console.log(`fetching new list soon`);\n          fetch('/timeline').then(res => res.json()).then(res => {\n            console.log(res, `fetched`);\n            fetching = true;\n            this.setState({\n              timeLine: res,\n              fetch: !this.state.fetch\n            });\n          });\n        }, 5000);\n        setTimeout(() => {\n          console.log(`fetching deleted list soon`);\n          fetch('/tidyuplisting').then(res => res.json()).then(res => {\n            let deletedArray = res.map((item, index) => {\n              const uploadTime = new Date(item.time);\n              uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n              let difference = +uploadTime - +new Date();\n\n              if (difference < 0) {\n                return item;\n              }\n            });\n            res.sort(function (a, b) {\n              const uploadTimeA = new Date(a.time);\n              const uploadTimeB = new Date(b.time);\n              return uploadTimeB - uploadTimeA;\n            });\n            this.setState({\n              deletedArray: deletedArray\n            });\n          });\n        }, 5000);\n        setTimeout(() => {\n          let defunctArray = this.state.timeLine.map((item, index) => {\n            const uploadTime = new Date(item.time);\n            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n            let difference = +uploadTime - +new Date();\n\n            if (difference < 0) {\n              return item;\n            }\n          });\n          let newArray = defunctArray.filter(item => {\n            return item;\n          });\n          console.log(`deleting soon`);\n          fetch('/tidyuplisting', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              toBeDeleted: newArray\n            })\n          }).then(res => res.text()).then(res => {\n            console.log(res);\n          });\n        }, 10000);\n      }\n    };\n\n    this.state = {\n      timeLine: [],\n      oldTimeLine: [],\n      fetch: true\n    };\n  }\n\n  componentDidMount() {\n    fetch('/timeline').then(res => res.json()).then(res => {\n      // console.log(res);\n      this.setState({\n        timeLine: res,\n        newTimeLine: res\n      });\n    });\n  }\n\n  render() {\n    let newArray = this.state.timeLine.map((item, index) => {\n      const uploadTime = new Date(item.time);\n      uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n      let difference = +uploadTime - +new Date();\n\n      if (difference > 0) {\n        return item;\n      }\n    });\n    let newerArray = newArray.filter(item => {\n      return item;\n    });\n    newerArray.sort(function (a, b) {\n      const uploadTimeA = new Date(a.time);\n      uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min);\n      const uploadTimeB = new Date(b.time);\n      uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min);\n      return uploadTimeA - uploadTimeB;\n    }); // console.log(newerArray, `before splice`)\n\n    if (newerArray.length > 20) {\n      newerArray.splice(19, newerArray.length - 20);\n    } // console.log(newerArray, `After splice`)\n\n\n    let merchantCard = newerArray.map((eachCard, index) => {\n      const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100;\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Link, {\n        to: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(EachMerchant, {\n        key: index,\n        duration: eachCard.time_limit_min,\n        listing: eachCard.listing_id,\n        time: eachCard.time,\n        merchant_Id: eachCard.merchant_id,\n        unmount: this.merchantCardUnmountHandler,\n        what: this.testing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, index, eachCard.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, \"up to\", discount, \"%\")));\n    });\n    const routeArray = newerArray.map((eachCard, index) => {\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Route, {\n        path: path,\n        render: () => /*#__PURE__*/React.createElement(ListingContainer, {\n          merchant_id: eachCard.merchant_id,\n          stripper: this.props.stripper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"Image here\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Timeline\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Orderhistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"Order history\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, routeArray, /*#__PURE__*/React.createElement(Route, {\n      path: \"/Orderhistory\",\n      render: () => /*#__PURE__*/React.createElement(OrderHistory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 35\n        }\n      }, merchantCard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js"],"names":["React","Component","EachMerchant","OrderHistory","Route","Link","Redirect","Switch","IndivListing","ListingContainer","fetching","TimeLine","constructor","props","testing","prop","setTimeout","console","log","fetch","then","res","json","setState","timeLine","state","deletedArray","map","item","index","uploadTime","Date","time","setMinutes","getMinutes","time_limit_min","difference","sort","a","b","uploadTimeA","uploadTimeB","defunctArray","newArray","filter","method","headers","body","JSON","stringify","toBeDeleted","text","oldTimeLine","componentDidMount","newTimeLine","render","newerArray","length","splice","merchantCard","eachCard","discount","unit_price","price_floor","path","merchant_id","listing_id","merchantCardUnmountHandler","name","routeArray","stripper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EachMerchant from './EachMerchant/EachMerchant'\nimport OrderHistory from '../OrderHistory/OrderHistory'\nimport { Route, Link, Redirect, Switch } from 'react-router-dom'\nimport IndivListing from '../IndivStore/IndivListing'\nimport ListingContainer from '../IndivStore/ListingContainer'\n\nvar fetching = true\n\nexport default class TimeLine extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            timeLine: [],\n            oldTimeLine: [],\n            fetch: true\n        }\n    }\n    componentDidMount() {\n        fetch('/timeline')\n            .then(res => res.json())\n            .then(res => {\n                // console.log(res);\n                this.setState({\n                    timeLine: res,\n                    newTimeLine: res\n                })\n            })\n    }\n\n    testing = (prop) => {\n\n        if (fetching === true) {\n            fetching = false\n            setTimeout(() => {\n                console.log(`fetching new list soon`)\n                fetch('/timeline')\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res, `fetched`)\n                        fetching = true\n                        this.setState({\n                            timeLine: res,\n                            fetch: !this.state.fetch\n                        })\n                    })\n            }, 5000)\n\n            setTimeout(() => {\n\n                console.log(`fetching deleted list soon`)\n                fetch('/tidyuplisting')\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let deletedArray = res.map((item, index) => {\n                            const uploadTime = new Date(item.time)\n                            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n                            let difference = +uploadTime - +new Date();\n                            if (difference < 0) {\n                                return item\n                            }\n                        })\n                        res.sort(function (a, b) {\n                            const uploadTimeA = new Date(a.time)\n                            const uploadTimeB = new Date(b.time)\n                            return uploadTimeB - uploadTimeA\n                        })\n                        this.setState({\n                            deletedArray: deletedArray\n                        })\n                    })\n            }, 5000)\n\n            setTimeout(() => {\n                let defunctArray = this.state.timeLine.map((item, index) => {\n                    const uploadTime = new Date(item.time)\n                    uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n                    let difference = +uploadTime - +new Date();\n                    if (difference < 0) {\n                        return item\n                    }\n                })\n                let newArray = defunctArray.filter((item) => {\n                    return item\n                })\n                console.log(`deleting soon`)\n                fetch('/tidyuplisting', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ toBeDeleted: newArray })\n                })\n                    .then((res) => res.text())\n                    .then((res) => {\n                        console.log(res)\n                    })\n            }, 10000)\n        }\n    }\n\n\n    render() {\n        let newArray = this.state.timeLine.map((item, index) => {\n            const uploadTime = new Date(item.time)\n            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n            let difference = +uploadTime - +new Date();\n            if (difference > 0) {\n                return item\n            }\n        })\n        let newerArray = newArray.filter((item) => {\n            return item\n        })\n\n\n        newerArray.sort(function (a, b) {\n            const uploadTimeA = new Date(a.time)\n            uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min)\n            const uploadTimeB = new Date(b.time)\n            uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min)\n            return uploadTimeA - uploadTimeB\n        })\n        // console.log(newerArray, `before splice`)\n        if (newerArray.length > 20) {\n            newerArray.splice(19, newerArray.length - 20)\n        }\n        // console.log(newerArray, `After splice`)\n        let merchantCard = newerArray.map((eachCard, index) => {\n            const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n            let path = \"/\" + eachCard.merchant_id\n            return <Link to={path}>\n\n                <EachMerchant key={index} duration={eachCard.time_limit_min} listing={eachCard.listing_id} time={eachCard.time} merchant_Id={eachCard.merchant_id} unmount={this.merchantCardUnmountHandler} what={this.testing}>\n                    <div>{index}{eachCard.name}</div>\n                    <div>up to{discount}%</div>\n                </EachMerchant>\n\n            </Link>\n        })\n\n        const routeArray = newerArray.map((eachCard, index) => {\n            let path = \"/\" + eachCard.merchant_id\n            return <Route path={path} render={\n                () => <ListingContainer merchant_id={eachCard.merchant_id} stripper={this.props.stripper} />\n            } />\n        })\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <div>Image here</div>\n                    <Link className=\"login break\" to=\"/Timeline\">Timeline</Link>\n                    <Link className=\"login break\" to=\"/Orderhistory\">Order history</Link>\n                </div>\n                <main>\n                    <Switch>\n                        {routeArray}\n                        <Route path=\"/Orderhistory\" render={\n                            () => <OrderHistory />\n                        } />\n                        <Route path=\"/\" render={\n                            () => <div>{merchantCard}</div>\n                        } />\n                    </Switch>\n                </main>\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}