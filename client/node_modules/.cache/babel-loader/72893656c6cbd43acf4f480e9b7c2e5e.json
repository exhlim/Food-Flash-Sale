{"ast":null,"code":"var _jsxFileName = \"/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/IndivStore/ListingContainer.js\";\nimport React from \"react\";\nimport IndivListing from \"./IndivListing\";\nimport Basket from \"./Basket\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport PaymentOverlay from \"./PaymentOverlay\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nexport default class ListingContainer extends React.Component {\n  constructor(props) {\n    //mounting\n    super(props);\n    console.log(\"----inside Listing constructor\");\n    this.state = {\n      merchant_id: props.merchant_id,\n      merchant_name: \"\",\n      merchant_img: \"\",\n      html: [],\n      result: [],\n      cart: [],\n      viewCart: false,\n      checkout: false\n    }; // this.addToCart = this.addToCart.bind(this);\n\n    this.navigateTo = this.navigateTo.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleCheckOut = this.handleCheckOut.bind(this);\n  } //\n  //payment click handlling\n\n\n  handleCheckOut() {\n    this.setState({\n      checkout: true\n    });\n  } //delete from cart\n\n\n  handleRemoveFromCart(e, item) {\n    this.setState(state => {\n      const cart = state.cart.filter(element => element.name != item.name);\n      localStorage.setItem(\"cart\", cart);\n      return {\n        cart\n      };\n    });\n  } //   //add to cart button\n  //   addToCart(e, addToCart) {\n  //     console.log(addToCart);\n  //     this.setState((prevState) => ({ cart: [...prevState.cart, addToCart] }));\n  //   }\n  // view cart button\n\n\n  navigateTo() {\n    this.setState({\n      viewCart: !this.state.viewCart\n    });\n  } //add to cart button\n\n\n  handleAddToCart(e, product) {\n    console.log(product);\n    this.setState(state => {\n      const cart = state.cart;\n      let productAlreadyInCart = false;\n      cart.forEach(item => {\n        if (item.name === product.name) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cart.push({ ...product,\n          count: 1\n        });\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      return cart;\n      console.log(this.state.cart);\n    });\n  } //when state is changed, FETCH results from aPI\n  //side effects ie: HTTP requests are allowed here\n\n\n  componentDidMount() {\n    fetch(`/indivshop/${this.props.listing_id}`).then(res => res.json()).then(res => this.setState({\n      result: res,\n      html: this.format(res),\n      merchant_name: res[0].name\n    }));\n  } //update and re-render once checkout is clicked and this.state.checkout=true;\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.checkout !== this.state.checkout) {\n      return /*#__PURE__*/React.createElement(PaymentOverlay, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }\n      });\n    }\n  } //helper functions\n  //take the res.json and convert into nice HTML\n\n\n  format(array) {\n    return array.map((item, index) => {\n      let item_name = item.item_name;\n      let quantity = item.quantity;\n      let discPrice = item.price_ceiling;\n      let originalPrice = item.unit_price;\n      let discount = (originalPrice - discPrice) / originalPrice;\n      let merchant_name = item.name;\n      let cuisine = item.cuisine;\n      let listing_id = item.listing_id;\n      let merchant_id = item.merchant_id;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IndivListing, {\n        item_name: item_name,\n        quantity: quantity,\n        discPrice: discPrice,\n        originalPrice: originalPrice,\n        discPrice: discPrice,\n        discount: discount,\n        merchant_name: merchant_name,\n        cuisine: cuisine,\n        onClick: this.handleAddToCart,\n        onDel: this.handleRemoveFromCart,\n        listing_id: listing_id,\n        merchant_id: merchant_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }));\n    });\n  }\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper); // if (this.state.checkout) {\n    //     return (\n    //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n    //     )\n    // }\n\n    if (this.state.viewCart && this.state.cart[0]) {\n      let data = {\n        merchant_id: this.state.cart[0].merchant_id,\n        //user_id:\n        name: this.state.cart[0].name,\n        user_id: this.state.cart[0].user_id,\n        listing_id: this.state.cart[0].listing_id,\n        price: this.state.cart[0].price,\n        quantity: this.state.cart[0].count / 2,\n        revenue: this.state.cart[0].count / 2 * this.state.cart[0].price\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"You are viewing deals from \", this.state.merchant_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, \"Order Summary\"), /*#__PURE__*/React.createElement(\"table\", {\n        style: {\n          maxWidth: \"300px\",\n          margin: \"0 auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, \"Item Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, \"Total\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, this.state.cart[0].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, this.state.cart[0].count / 2), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, \"Total: $\", this.state.cart[0].count / 2 * this.state.cart[0].price))), /*#__PURE__*/React.createElement(Elements, {\n        stripe: stripePromise,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CheckoutForm, {\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ListItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, this.state.html));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.navigateTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, \"View Cart \", this.state.cart.length), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, \"You are viewing deals from \", this.state.merchant_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ListItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, this.state.html));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/IndivStore/ListingContainer.js"],"names":["React","IndivListing","Basket","CheckoutForm","PaymentOverlay","Elements","loadStripe","ListingContainer","Component","constructor","props","console","log","state","merchant_id","merchant_name","merchant_img","html","result","cart","viewCart","checkout","navigateTo","bind","handleAddToCart","handleRemoveFromCart","handleCheckOut","setState","e","item","filter","element","name","localStorage","setItem","product","productAlreadyInCart","forEach","count","push","JSON","stringify","componentDidMount","fetch","listing_id","then","res","json","format","componentDidUpdate","prevProps","prevState","array","map","index","item_name","quantity","discPrice","price_ceiling","originalPrice","unit_price","discount","cuisine","render","stripePromise","stripper","data","user_id","price","revenue","maxWidth","margin","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IndivListing from \"./IndivListing\";\nimport Basket from \"./Basket\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport PaymentOverlay from \"./PaymentOverlay\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nexport default class ListingContainer extends React.Component {\n  constructor(props) {\n    //mounting\n    super(props);\n    console.log(\"----inside Listing constructor\");\n\n    this.state = {\n      merchant_id: props.merchant_id,\n      merchant_name: \"\",\n      merchant_img: \"\",\n      html: [],\n      result: [],\n      cart: [],\n      viewCart: false,\n      checkout: false,\n    };\n\n    // this.addToCart = this.addToCart.bind(this);\n    this.navigateTo = this.navigateTo.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleCheckOut = this.handleCheckOut.bind(this);\n  }\n  //\n\n  //payment click handlling\n  handleCheckOut() {\n    this.setState({ checkout: true });\n  }\n\n  //delete from cart\n  handleRemoveFromCart(e, item) {\n    this.setState((state) => {\n      const cart = state.cart.filter((element) => element.name != item.name);\n      localStorage.setItem(\"cart\", cart);\n      return { cart };\n    });\n  }\n\n  //   //add to cart button\n  //   addToCart(e, addToCart) {\n  //     console.log(addToCart);\n  //     this.setState((prevState) => ({ cart: [...prevState.cart, addToCart] }));\n  //   }\n\n  // view cart button\n  navigateTo() {\n    this.setState({ viewCart: !this.state.viewCart });\n  }\n  //add to cart button\n  handleAddToCart(e, product) {\n    console.log(product);\n\n    this.setState((state) => {\n      const cart = state.cart;\n      let productAlreadyInCart = false;\n      cart.forEach((item) => {\n        if (item.name === product.name) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n      if (!productAlreadyInCart) {\n        cart.push({ ...product, count: 1 });\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      return cart;\n      console.log(this.state.cart);\n    });\n  }\n\n  //when state is changed, FETCH results from aPI\n  //side effects ie: HTTP requests are allowed here\n  componentDidMount() {\n    fetch(`/indivshop/${this.props.listing_id}`)\n      .then((res) => res.json())\n      .then((res) =>\n        this.setState({\n          result: res,\n          html: this.format(res),\n          merchant_name: res[0].name,\n        })\n      );\n  }\n\n  //update and re-render once checkout is clicked and this.state.checkout=true;\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.checkout !== this.state.checkout) {\n      return <PaymentOverlay />;\n    }\n  }\n\n  //helper functions\n\n  //take the res.json and convert into nice HTML\n  format(array) {\n    return array.map((item, index) => {\n      let item_name = item.item_name;\n      let quantity = item.quantity;\n      let discPrice = item.price_ceiling;\n      let originalPrice = item.unit_price;\n      let discount = (originalPrice - discPrice) / originalPrice;\n      let merchant_name = item.name;\n      let cuisine = item.cuisine;\n      let listing_id = item.listing_id;\n      let merchant_id = item.merchant_id;\n\n      return (\n        <div key={index}>\n          <IndivListing\n            item_name={item_name}\n            quantity={quantity}\n            discPrice={discPrice}\n            originalPrice={originalPrice}\n            discPrice={discPrice}\n            discount={discount}\n            merchant_name={merchant_name}\n            cuisine={cuisine}\n            onClick={this.handleAddToCart}\n            onDel={this.handleRemoveFromCart}\n            listing_id={listing_id}\n            merchant_id={merchant_id}\n          />\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper);\n    // if (this.state.checkout) {\n    //     return (\n    //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n\n    //     )\n    // }\n\n    if (this.state.viewCart && this.state.cart[0]) {\n      let data = {\n        merchant_id: this.state.cart[0].merchant_id,\n        //user_id:\n        name: this.state.cart[0].name,\n        user_id: this.state.cart[0].user_id,\n        listing_id: this.state.cart[0].listing_id,\n        price: this.state.cart[0].price,\n        quantity: this.state.cart[0].count / 2,\n        revenue: (this.state.cart[0].count / 2) * this.state.cart[0].price,\n      };\n      return (\n        <div>\n          <div>\n            <h1>You are viewing deals from {this.state.merchant_name}</h1>\n            <br />\n            <h1>Order Summary</h1>\n            <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n              <tr>\n                <th>Item Name</th>\n                <th>Quantity</th>\n                <th>Total</th>\n              </tr>\n              <tr>\n                <td>{this.state.cart[0].name}</td>\n                <td>{this.state.cart[0].count / 2}</td>\n                <td>\n                  Total: $\n                  {(this.state.cart[0].count / 2) * this.state.cart[0].price}\n                </td>\n              </tr>\n            </table>\n\n            <Elements stripe={stripePromise}>\n              <CheckoutForm data={data}></CheckoutForm>\n            </Elements>\n          </div>\n          <div className=\"ListItems\">{this.state.html}</div>\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <button onClick={this.navigateTo}>\n            View Cart {this.state.cart.length}\n          </button>\n          <h1>You are viewing deals from {this.state.merchant_name}</h1>\n          <br />\n\n          <div className=\"ListItems\">{this.state.html}</div>\n        </>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}