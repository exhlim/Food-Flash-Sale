{"ast":null,"code":"var _jsxFileName = \"/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/GeoLocation/GeoLocation.js\";\nimport React from 'react';\nimport TimeLine from '../TimeLine/TimeLine';\nexport default class GeoLocation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      latUser: 0,\n      lonUser: 0\n    }; // go into indiv listing\n  } //\n\n\n  componentDidMount() {\n    if ('geolocation' in navigator) {\n      console.log('geolocation available');\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        this.setState({\n          latUser: lat,\n          lonUser: lon\n        });\n      });\n    } else {\n      console.log('geolocation not available');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"latitude: \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, this.state.latUser, \"\\xB0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 67\n      }\n    }), \"longitude: \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    }, this.state.lonUser, \"\\xB0\"), /*#__PURE__*/React.createElement(TimeLine, {\n      lon: this.state.lonUser,\n      lat: this.state.latUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/GeoLocation/GeoLocation.js"],"names":["React","TimeLine","GeoLocation","Component","constructor","state","latUser","lonUser","componentDidMount","navigator","console","log","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAKA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAE,CADD;AAERC,MAAAA,OAAO,EAAC;AAFA,KAAZ,CAFS,CAMT;AACH,GARoD,CASzD;;;AACAC,EAAAA,iBAAiB,GAAG;AACZ,QAAG,iBAAiBC,SAApB,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,MAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAG;AAChD,cAAMC,GAAG,GAAED,QAAQ,CAACE,MAAT,CAAgBC,QAA3B;AACA,cAAMC,GAAG,GAAEJ,QAAQ,CAACE,MAAT,CAAgBG,SAA3B;AACA,aAAKC,QAAL,CAAc;AAACd,UAAAA,OAAO,EAAES,GAAV;AAAeR,UAAAA,OAAO,EAAEW;AAAxB,SAAd;AACH,OAJD;AAKH,KAPD,MAOO;AACHR,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;AACJ;;AAGDU,EAAAA,MAAM,GAAE;AAKA,wBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACU;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKhB,KAAL,CAAWC,OAAhC,SADV,eAC8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9D,8BAEW;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKD,KAAL,CAAWE,OAAjC,SAFX,eAGA,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,OAA1B;AAAmC,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADQ;AASX;;AAtCwD","sourcesContent":["import React from 'react';\nimport TimeLine from '../TimeLine/TimeLine';\n\n\n\n\nexport default class GeoLocation extends React.Component {\n    constructor(){\n        super()\n        this.state ={\n            latUser: 0,\n            lonUser:0\n        }\n        // go into indiv listing\n    }\n//\ncomponentDidMount() {\n        if('geolocation' in navigator){\n            console.log('geolocation available');\n            navigator.geolocation.getCurrentPosition(position =>{\n                const lat= position.coords.latitude;\n                const lon= position.coords.longitude;\n                this.setState({latUser: lat, lonUser: lon})\n            })\n        } else {\n            console.log('geolocation not available');\n        }\n    }\n\n\n    render(){\n\n\n\n\n            return (\n    <div>\n    latitude: <span id=\"latitude\">{this.state.latUser}&deg;</span><br/>\n    longitude: <span id=\"longitude\">{this.state.lonUser}&deg;</span>\n    <TimeLine lon={this.state.lonUser} lat={this.state.latUser} />\n    </div>\n\n            )\n\n}\n}"]},"metadata":{},"sourceType":"module"}