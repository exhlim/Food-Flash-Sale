{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/Merchant Home/AllOrders/OrderList.js\";\nimport React from 'react';\nimport IndivOrder from './IndivOrder';\n\nclass OrderList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResult: [],\n      //result from API\n      ordersResult: [],\n      merchant_id: 1,\n      html: \"\"\n    };\n    this.format = this.format.bind(this);\n  } //set state with props from parent: SEARCH\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    //mounting\n    return {\n      sort: nextProps.sort\n    };\n  }\n\n  componentDidMount() {\n    //mounting\n    if (this.props.display) {\n      fetch(\"/merchantorders/\" + this.state.merchant_id).then(res => res.json()).then(res => {\n        if (res.length < 1) {\n          this.setState({\n            html: 'You have no orders yet'\n          });\n        } else {\n          let formattedResult = this.format(res);\n          this.setState({\n            ordersResult: res,\n            html: formattedResult\n          });\n        }\n      }).catch(error => {\n        console.log(\"error happened--- at GET MERCHANT ORDER MOUNT\", error.message);\n      });\n    }\n  } //force the page to re-render\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sort !== this.props.sort) {\n      this.sortMe(this.state.ordersResult, this.state.sort);\n      let sortedhtml = this.format(this.state.ordersResult);\n      this.setState({\n        html: sortedhtml\n      });\n    }\n  } //take the res.json and convert into nice HTML\n\n\n  format(array) {\n    return array.map((item, index) => {\n      let order_id = item.order_id;\n      let price = item.price;\n      let quantity = item.quantity;\n      let name = item.item_name;\n      let date = item.date_created;\n      let revenue = item.revenue;\n      return /*#__PURE__*/React.createElement(IndivOrder, {\n        order_id: order_id,\n        price: price,\n        quantity: quantity,\n        name: name,\n        date: date,\n        revenue: revenue,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }\n      });\n    });\n  } // sorts results based on selected category\n\n\n  sortMe(array, category) {\n    switch (category) {\n      case \"name\":\n        array.sort((a, b) => {\n          return b.item_name > a.item_name ? 1 : -1;\n        });\n        break;\n\n      case \"revenue\":\n        array.sort((a, b) => {\n          return b.revenue > a.revenue ? 1 : -1;\n        });\n        break;\n\n      default:\n        return array;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.state.html);\n  }\n\n}\n\nexport default OrderList;","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/Merchant Home/AllOrders/OrderList.js"],"names":["React","IndivOrder","OrderList","Component","constructor","props","state","searchResult","ordersResult","merchant_id","html","format","bind","getDerivedStateFromProps","nextProps","prevState","sort","componentDidMount","display","fetch","then","res","json","length","setState","formattedResult","catch","error","console","log","message","componentDidUpdate","prevProps","sortMe","sortedhtml","array","map","item","index","order_id","price","quantity","name","item_name","date","date_created","revenue","category","a","b","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAKA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,YAAY,EAAC,EADL;AACS;AACjBC,MAAAA,YAAY,EAAC,EAFL;AAGRC,MAAAA,WAAW,EAAE,CAHL;AAIRC,MAAAA,IAAI,EAAC;AAJG,KAAZ;AAMA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH,GAVmC,CAYxC;;;AACI,SAAOC,wBAAP,CAAgCC,SAAhC,EAA0CC,SAA1C,EAAqD;AACjD;AACA,WAAO;AAAEC,MAAAA,IAAI,EAAEF,SAAS,CAACE;AAAlB,KAAP;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAG,KAAKZ,KAAL,CAAWa,OAAd,EAAuB;AACvBC,MAAAA,KAAK,CAAC,qBAAmB,KAAKb,KAAL,CAAWG,WAA/B,CAAL,CACCW,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMC,GAAG,IAAI;AACT,YAAGA,GAAG,CAACE,MAAJ,GAAa,CAAhB,EAAkB;AACd,eAAKC,QAAL,CAAc;AAACd,YAAAA,IAAI,EAAE;AAAP,WAAd;AACH,SAFD,MAEO;AACH,cAAIe,eAAe,GAAG,KAAKd,MAAL,CAAYU,GAAZ,CAAtB;AACA,eAAKG,QAAL,CAAc;AAAChB,YAAAA,YAAY,EAAEa,GAAf;AAAoBX,YAAAA,IAAI,EAACe;AAAzB,WAAd;AACH;AACJ,OATD,EAUCC,KAVD,CAUOC,KAAK,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DF,KAAK,CAACG,OAAnE;AACH,OAZG;AAaH;AACA,GAnCmC,CAqCpC;;;AACAC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3B,QAAGA,SAAS,CAAChB,IAAV,KAAmB,KAAKX,KAAL,CAAWW,IAAjC,EAAsC;AAClC,WAAKiB,MAAL,CAAY,KAAK3B,KAAL,CAAWE,YAAvB,EAAqC,KAAKF,KAAL,CAAWU,IAAhD;AACA,UAAIkB,UAAU,GAAG,KAAKvB,MAAL,CAAY,KAAKL,KAAL,CAAWE,YAAvB,CAAjB;AACA,WAAKgB,QAAL,CAAc;AAACd,QAAAA,IAAI,EAAEwB;AAAP,OAAd;AACH;AACJ,GA5CmC,CA+CxC;;;AACAvB,EAAAA,MAAM,CAACwB,KAAD,EAAQ;AACV,WAAOA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC3B,UAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AACA,UAAIC,KAAK,GAAGH,IAAI,CAACG,KAAjB;AACA,UAAIC,QAAQ,GAAEJ,IAAI,CAACI,QAAnB;AACA,UAAIC,IAAI,GAAGL,IAAI,CAACM,SAAhB;AACA,UAAIC,IAAI,GAAGP,IAAI,CAACQ,YAAhB;AACA,UAAIC,OAAO,GAAGT,IAAI,CAACS,OAAnB;AAEA,0BAAO,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAEP,QAAtB;AAAgC,QAAA,KAAK,EAAEC,KAAvC;AAA8C,QAAA,QAAQ,EAAEC,QAAxD;AAAkE,QAAA,IAAI,EAAEC,IAAxE;AAA8E,QAAA,IAAI,EAAEE,IAApF;AAA0F,QAAA,OAAO,EAAGE,OAApG;AAA8G,QAAA,GAAG,EAAER,KAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KATM,CAAP;AAUH,GA3DuC,CA6DrC;;;AAEHL,EAAAA,MAAM,CAACE,KAAD,EAAOY,QAAP,EAAgB;AAClB,YAAOA,QAAP;AACI,WAAK,MAAL;AACAZ,QAAAA,KAAK,CAACnB,IAAN,CAAW,CAACgC,CAAD,EAAGC,CAAH,KAAO;AACd,iBAAOA,CAAC,CAACN,SAAF,GAAcK,CAAC,CAACL,SAAjB,GAA8B,CAA9B,GAAiC,CAAC,CAAxC;AACH,SAFD;AAGA;;AACJ,WAAK,SAAL;AACIR,QAAAA,KAAK,CAACnB,IAAN,CAAW,CAACgC,CAAD,EAAGC,CAAH,KAAO;AACd,iBAAOA,CAAC,CAACH,OAAF,GAAYE,CAAC,CAACF,OAAf,GAA0B,CAA1B,GAA6B,CAAC,CAApC;AACH,SAFD;AAGA;;AAEJ;AACQ,eAAOX,KAAP;AAbR;AAgBH;;AAGGe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK5C,KAAL,CAAWI,IADZ,CADJ;AAMH;;AA1FmC;;AA6FxC,eAAeR,SAAf","sourcesContent":["import React from 'react';\nimport IndivOrder from './IndivOrder'\n\n\n\n\nclass OrderList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state ={\n            searchResult:[], //result from API\n            ordersResult:[],\n            merchant_id: 1,\n            html:\"\"\n        }\n        this.format = this.format.bind(this);\n    }\n\n//set state with props from parent: SEARCH\n    static getDerivedStateFromProps(nextProps,prevState) {\n        //mounting\n        return { sort: nextProps.sort}\n    }\n\n    componentDidMount() {\n        //mounting\n        if(this.props.display) {\n        fetch(\"/merchantorders/\"+this.state.merchant_id)\n        .then(res => res.json())\n        .then(res => {\n            if(res.length < 1){\n                this.setState({html: 'You have no orders yet'})\n            } else {\n                let formattedResult = this.format(res);\n                this.setState({ordersResult: res, html:formattedResult})\n            }\n        })\n        .catch(error => {\n        console.log(\"error happened--- at GET MERCHANT ORDER MOUNT\", error.message)\n    });\n    }\n    }\n\n    //force the page to re-render\n    componentDidUpdate (prevProps) {\n        if(prevProps.sort !== this.props.sort){\n            this.sortMe(this.state.ordersResult, this.state.sort)\n            let sortedhtml = this.format(this.state.ordersResult);\n            this.setState({html: sortedhtml})\n        }\n    }\n\n\n//take the res.json and convert into nice HTML\nformat(array) {\n    return array.map((item,index)=>{\n        let order_id = item.order_id;\n        let price = item.price;\n        let quantity= item.quantity;\n        let name = item.item_name;\n        let date = item.date_created;\n        let revenue = item.revenue;\n\n        return <IndivOrder order_id={order_id} price={price} quantity={quantity} name={name} date={date} revenue ={revenue}  key={index} />\n    })\n}\n\n   // sorts results based on selected category\n\nsortMe(array,category){\n    switch(category){\n        case \"name\":\n        array.sort((a,b)=>{\n            return(b.item_name > a.item_name) ? 1: -1\n        })\n        break;\n    case \"revenue\":\n        array.sort((a,b)=>{\n            return(b.revenue > a.revenue) ? 1: -1\n        })\n        break;\n\n    default:\n            return array;\n\n    }\n}\n\n\n    render(){\n        return (\n            <div>\n            {this.state.html}\n            </div>\n\n            )\n    }\n}\n\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}