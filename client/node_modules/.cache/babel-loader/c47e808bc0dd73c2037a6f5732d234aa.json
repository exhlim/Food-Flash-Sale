{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/IndivStore/ListingContainer.js\";\nimport React from 'react';\nimport IndivListing from './IndivListing';\nimport Basket from './Basket';\nimport PaymentOverlay from './PaymentOverlay';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nexport default class ListingContainer extends React.Component {\n  constructor(props) {\n    //mounting\n    super(props);\n\n    this.submitHandler = e => {\n      e.preventDefault();\n    };\n\n    console.log(\"----inside Listing constructor\");\n    this.state = {\n      merchant_id: props.merchant_id,\n      merchant_name: \"\",\n      merchant_img: \"\",\n      html: [],\n      result: [],\n      cart: [],\n      viewCart: false,\n      checkout: false\n    };\n    this.addToCart = this.addToCart.bind(this);\n    this.navigateTo = this.navigateTo.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleCheckOut = this.handleCheckOut.bind(this);\n  } //\n  //payment click handlling\n\n\n  handleCheckOut() {\n    this.setState({\n      checkout: true\n    });\n  } //delete from cart\n\n\n  handleRemoveFromCart(e, item) {\n    this.setState(state => {\n      const cart = state.cart.filter(element => element.name != item.name);\n      localStorage.setItem('cart', cart);\n      return {\n        cart\n      };\n    });\n  } //add to cart button\n\n\n  addToCart(e, addToCart) {\n    console.log(addToCart);\n    this.setState(prevState => ({\n      cart: [...prevState.cart, addToCart]\n    }));\n  } // view cart button\n\n\n  navigateTo() {\n    this.setState({\n      viewCart: !this.state.viewCart\n    });\n  }\n\n  handleAddToCart(e, product) {\n    console.log(product);\n    this.setState(state => {\n      const cart = state.cart;\n      let productAlreadyInCart = false;\n      cart.forEach(item => {\n        if (item.name === product.name) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cart.push({ ...product,\n          count: 1\n        });\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      return cart;\n      console.log(this.state.cart);\n    });\n  }\n\n  //when state is changed, FETCH results from aPI\n  //side effects ie: HTTP requests are allowed here\n  componentDidMount() {\n    fetch(\"/indivshop/1\").then(res => res.json()).then(res => this.setState({\n      result: res,\n      html: this.format(res),\n      merchant_name: res[0].name\n    }));\n  } //update and re-render once checkout is clicked and this.state.checkout=true;\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.checkout !== this.state.checkout) {\n      return /*#__PURE__*/React.createElement(PaymentOverlay, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      });\n    }\n  } //helper functions\n  //take the res.json and convert into nice HTML\n\n\n  format(array) {\n    return array.map((item, index) => {\n      let item_name = item.item_name;\n      let quantity = item.quantity;\n      let discPrice = item.price_ceiling;\n      let originalPrice = item.unit_price;\n      let discount = (originalPrice - discPrice) / originalPrice;\n      let merchant_name = item.name;\n      let cuisine = item.cuisine;\n      let listing_id = item.listing_id;\n      let merchant_id = item.merchant_id;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(IndivListing, {\n        item_name: item_name,\n        quantity: quantity,\n        discPrice: discPrice,\n        originalPrice: originalPrice,\n        discPrice: discPrice,\n        discount: discount,\n        merchant_name: merchant_name,\n        cuisine: cuisine,\n        onClick: this.handleAddToCart,\n        listing_id: listing_id,\n        merchant_id: merchant_id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }));\n    });\n  }\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper);\n    console.log(this.state.merchant_id); // if (this.state.checkout) {\n    //     return (\n    //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n    //     )\n    // }\n\n    if (this.state.viewCart && this.state.cart[0]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }\n      }, \"You are viewing deals from \", this.state.merchant_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, \"Order Summary\"), /*#__PURE__*/React.createElement(\"table\", {\n        style: {\n          maxWidth: \"300px\",\n          margin: \"0 auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, \"Item Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, \"Total\")), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 33\n        }\n      }, this.state.cart[0].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }\n      }, this.state.cart[0].count / 2), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, \"Total: $\", this.state.cart[0].count / 2 * this.state.cart[0].price))), /*#__PURE__*/React.createElement(\"form\", {\n        style: {\n          maxWidth: \"300px\",\n          margin: \"0 auto\"\n        },\n        onSubmit: this.submitHandler,\n        method: \"POST\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].merchant_id,\n        name: \"merchant_id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].user_id,\n        name: \"user_id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].price,\n        name: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].listing_id,\n        name: \"listing_id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].count / 2,\n        name: \"quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"hidden\",\n        value: this.state.cart[0].count / 2 * this.state.cart[0].price,\n        name: \"revenue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Elements, {\n        stripe: stripePromise,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CardElement, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 62\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Checkout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ListItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, this.state.html));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.navigateTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, \"View Cart \", this.state.cart.length), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, \"You are viewing deals from \", this.state.merchant_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ListItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, this.state.html));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/IndivStore/ListingContainer.js"],"names":["React","IndivListing","Basket","PaymentOverlay","Elements","CardElement","useStripe","useElements","loadStripe","ListingContainer","Component","constructor","props","submitHandler","e","preventDefault","console","log","state","merchant_id","merchant_name","merchant_img","html","result","cart","viewCart","checkout","addToCart","bind","navigateTo","handleAddToCart","handleRemoveFromCart","handleCheckOut","setState","item","filter","element","name","localStorage","setItem","prevState","product","productAlreadyInCart","forEach","count","push","JSON","stringify","componentDidMount","fetch","then","res","json","format","componentDidUpdate","prevProps","array","map","index","item_name","quantity","discPrice","price_ceiling","originalPrice","unit_price","discount","cuisine","listing_id","render","stripePromise","stripper","maxWidth","margin","price","user_id","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IndivListing from './IndivListing';\nimport Basket from './Basket';\nimport PaymentOverlay from './PaymentOverlay';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js'\n\n\nexport default class ListingContainer extends React.Component {\n    constructor(props) {\n        //mounting\n        super(props)\n        console.log(\"----inside Listing constructor\")\n\n        this.state = {\n            merchant_id: props.merchant_id,\n            merchant_name: \"\",\n            merchant_img: \"\",\n            html: [],\n            result: [],\n            cart: [],\n            viewCart: false,\n            checkout: false\n        }\n\n        this.addToCart = this.addToCart.bind(this);\n        this.navigateTo = this.navigateTo.bind(this)\n        this.handleAddToCart = this.handleAddToCart.bind(this)\n        this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n        this.handleCheckOut = this.handleCheckOut.bind(this)\n\n    }\n    //\n\n\n\n\n    //payment click handlling\n    handleCheckOut() {\n        this.setState({ checkout: true })\n\n    }\n\n\n\n\n    //delete from cart\n    handleRemoveFromCart(e, item) {\n        this.setState(state => {\n            const cart = state.cart.filter(element => element.name != item.name);\n            localStorage.setItem('cart', cart);\n            return { cart }\n        })\n    }\n\n\n    //add to cart button\n    addToCart(e, addToCart) {\n        console.log(addToCart)\n        this.setState((prevState) =>\n            ({ cart: [...prevState.cart, addToCart] }))\n    }\n\n\n    // view cart button\n    navigateTo() {\n        this.setState({ viewCart: !this.state.viewCart })\n    }\n\n    handleAddToCart(e, product) {\n        console.log(product)\n\n        this.setState(state => {\n            const cart = state.cart;\n            let productAlreadyInCart = false;\n            cart.forEach(item => {\n                if (item.name === product.name) {\n                    productAlreadyInCart = true;\n                    item.count++;\n                }\n            });\n            if (!productAlreadyInCart) {\n                cart.push({ ...product, count: 1 })\n            }\n            localStorage.setItem(\"cart\", JSON.stringify(cart));\n            return cart;\n            console.log(this.state.cart)\n        })\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n\n    }\n\n    //when state is changed, FETCH results from aPI\n    //side effects ie: HTTP requests are allowed here\n    componentDidMount() {\n        fetch(\"/indivshop/1\")\n            .then(res => res.json())\n            .then(res =>\n                this.setState({ result: res, html: this.format(res), merchant_name: res[0].name })\n            )\n    }\n\n\n    //update and re-render once checkout is clicked and this.state.checkout=true;\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.checkout !== this.state.checkout) {\n            return <PaymentOverlay />\n        }\n    }\n\n\n\n    //helper functions\n\n    //take the res.json and convert into nice HTML\n    format(array) {\n        return array.map((item, index) => {\n            let item_name = item.item_name;\n            let quantity = item.quantity;\n            let discPrice = item.price_ceiling;\n            let originalPrice = item.unit_price;\n            let discount = (originalPrice - discPrice) / originalPrice\n            let merchant_name = item.name;\n            let cuisine = item.cuisine;\n            let listing_id = item.listing_id;\n            let merchant_id = item.merchant_id\n\n            return <div key={index}>\n                <IndivListing item_name={item_name} quantity={quantity} discPrice={discPrice} originalPrice={originalPrice} discPrice={discPrice} discount={discount} merchant_name={merchant_name} cuisine={cuisine} onClick={this.handleAddToCart} listing_id={listing_id} merchant_id={merchant_id} />\n\n            </div>\n        })\n    }\n\n\n    render() {\n        const stripePromise = loadStripe(this.props.stripper)\n        console.log(this.state.merchant_id)\n\n\n\n        // if (this.state.checkout) {\n        //     return (\n        //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n\n        //     )\n        // }\n\n\n\n\n        if (this.state.viewCart && this.state.cart[0]) {\n            return (\n                <div>\n\n                    <div>\n                        <h1>You are viewing deals from {this.state.merchant_name}</h1>\n                        <br />\n                        <h1>Order Summary</h1>\n                        <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n                            <tr>\n                                <th>Item Name</th>\n                                <th>Quantity</th>\n                                <th>Total</th>\n                            </tr>\n                            <tr>\n                                <td>{this.state.cart[0].name}</td>\n                                <td>{this.state.cart[0].count / 2}</td>\n                                <td>Total: ${this.state.cart[0].count / 2 * this.state.cart[0].price}</td>\n                            </tr>\n                        </table>\n\n                        <form style={{ maxWidth: \"300px\", margin: \"0 auto\" }} onSubmit={this.submitHandler} method=\"POST\">\n                            {/* action=\"/submitOrder\" */}\n\n                            <input type=\"hidden\" value={this.state.cart[0].merchant_id} name=\"merchant_id\" />\n                            <input type=\"hidden\" value={this.state.cart[0].user_id} name=\"user_id\" />\n                            <input type=\"hidden\" value={this.state.cart[0].price} name=\"price\" />\n                            <input type=\"hidden\" value={this.state.cart[0].listing_id} name=\"listing_id\" />\n                            <input type=\"hidden\" value={this.state.cart[0].count / 2} name=\"quantity\" />\n                            <input type=\"hidden\" value={this.state.cart[0].count / 2 * this.state.cart[0].price} name=\"revenue\" />\n                            <Elements stripe={stripePromise}><CardElement /></Elements>\n                            <input type=\"submit\" value=\"Checkout\" />\n                        </form>\n\n                    </div>\n                    <div className=\"ListItems\" >\n                        {this.state.html}\n                    </div>\n                </div>\n            )\n\n        } else {\n            return (\n                <>\n                    <button onClick={this.navigateTo}>View Cart {this.state.cart.length}</button>\n                    <h1>You are viewing deals from {this.state.merchant_name}</h1>\n                    <br />\n\n                    <div className=\"ListItems\" >\n                        {this.state.html}\n                    </div>\n\n                </>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}