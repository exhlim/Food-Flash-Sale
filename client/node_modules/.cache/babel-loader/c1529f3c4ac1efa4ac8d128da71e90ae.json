{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/ByDistance.js\";\nimport React, { useState, Component } from 'react';\nimport { Route, Link, Redirect, Switch } from 'react-router-dom';\nimport EachMerchant from './EachMerchant/EachMerchant';\nimport ListingContainer from '../IndivStore/ListingContainer';\nimport OrderHistory from '../OrderHistory/OrderHistory';\nimport IndivListing from '../IndivStore/IndivListing';\nvar fetching = true;\nvar newArray = [];\nexport default class TimeLine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testing = prop => {\n      if (fetching === true) {\n        fetching = false;\n        setTimeout(() => {\n          console.log(`fetching new list soon`);\n          fetch('/timeline').then(res => res.json()).then(res => {\n            console.log(res, `fetched`);\n            fetching = true;\n            this.setState({\n              timeLine: res\n            });\n          });\n        }, 5000);\n        setTimeout(() => {\n          console.log(`fetching deleted list soon`);\n          fetch('/deletedlisting').then(res => res.json()).then(res => {\n            if (res && res.length > 0) {\n              res.sort(function (a, b) {\n                const uploadTimeA = new Date(a.time);\n                const uploadTimeB = new Date(b.time);\n                return uploadTimeB - uploadTimeA;\n              });\n              this.setState({\n                deletedArray: res\n              });\n            }\n          });\n        }, 5000);\n        setTimeout(() => {\n          let defunctArray = this.state.timeLine.map((item, index) => {\n            const uploadTime = new Date(item.time);\n            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n            let difference = +uploadTime - +new Date();\n\n            if (difference < 0) {\n              return item;\n            }\n          });\n          let newArray = defunctArray.filter(item => {\n            return item;\n          });\n          console.log(`deleting soon`);\n          fetch('/tidyuplisting', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              toBeDeleted: newArray\n            })\n          }).then(res => res.text()).then(res => {\n            console.log(res);\n          });\n        }, 10000);\n      }\n    };\n\n    this.state = {\n      timeLine: [],\n      deletedArray: [],\n      filter: \"\",\n      sorted: [],\n      lat: this.props.lat,\n      lon: this.props.lon,\n      status: 'True',\n      mode: 'default'\n    };\n  }\n\n  componentDidMount() {\n    fetch('/timeline').then(res => res.json()).then(res => {\n      // console.log(res);\n      this.setState({\n        timeLine: res\n      });\n    });\n    fetch('/deletedlisting').then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res && res.length > 0) {\n        res.sort(function (a, b) {\n          const uploadTimeA = new Date(a.time);\n          const uploadTimeB = new Date(b.time);\n          return uploadTimeB - uploadTimeA;\n        });\n        this.setState({\n          deletedArray: res\n        });\n      }\n    });\n  }\n\n  render() {\n    let Array = this.state.timeLine.map((item, index) => {\n      const uploadTime = new Date(item.time);\n      uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n      let difference = +uploadTime - +new Date();\n\n      if (difference > 0) {\n        return item;\n      }\n    });\n    let nArray = Array.filter(item => {\n      return item;\n    });\n    let lat = this.props.lat;\n    let lon = this.props.lon;\n    nArray.sort(function (a, b) {\n      var radlatUser = Math.PI * lat / 180;\n      var radlatA = Math.PI * a.latitude / 180;\n      var theta = lon - a.longitude;\n      var radtheta = Math.PI * theta / 180;\n      var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\n\n      if (distA > 1) {\n        distA = 1;\n      }\n\n      distA = Math.acos(distA);\n      distA = distA * 180 / Math.PI;\n      distA = distA * 60 * 1.1515;\n      distA = distA * 1.609344;\n      let distanceA = distA * 1.609344;\n      var radlatB = Math.PI * b.latitude / 180;\n      var theta = lon - b.longitude;\n      var radtheta = Math.PI * theta / 180;\n      var distB = Math.sin(radlatUser) * Math.sin(radlatB) + Math.cos(radlatUser) * Math.cos(radlatB) * Math.cos(radtheta);\n\n      if (distB > 1) {\n        distB = 1;\n      }\n\n      distB = Math.acos(distB);\n      distB = distB * 180 / Math.PI;\n      distB = distB * 60 * 1.1515;\n      distB = distB * 1.609344;\n      let distanceB = distB * 1.609344;\n      console.log(a.latitude);\n      console.log(a.longitude);\n      return distanceA - distanceB;\n    });\n\n    if (nArray.length > 20) {\n      nArray.splice(19, nArray.length - 20);\n    }\n\n    let merchantCard = nArray.map((eachCard, index) => {\n      const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100;\n      let path = \"/\" + eachCard.merchant_id + \"/\" + eachCard.listing_id;\n      var radlatUser = Math.PI * lat / 180;\n      var radlatA = Math.PI * eachCard.latitude / 180;\n      var theta = lon - eachCard.longitude;\n      var radtheta = Math.PI * theta / 180;\n      var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\n\n      if (distA > 1) {\n        distA = 1;\n      }\n\n      distA = Math.acos(distA);\n      distA = distA * 180 / Math.PI;\n      distA = distA * 60 * 1.1515;\n      distA = distA * 1.609344;\n      let distance = distA * 1.609344;\n      return /*#__PURE__*/React.createElement(Link, {\n        className: \"col-lg-4 col-md-6 mb-4\",\n        to: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(EachMerchant, {\n        className: \"card h-100\",\n        key: index,\n        duration: eachCard.time_limit_min,\n        time: eachCard.time,\n        merchant_Id: eachCard.merchant_id,\n        what: this.testing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"card-img-top\",\n        src: `https://picsum.photos/id/${Math.pow(index, 2)}/700/400`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, eachCard.name, \" \", discount.toFixed(0), \"% off !\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, \"About \", distance.toFixed(0), \" km away.\"), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, eachCard.description)));\n    }); // console.log(newerArray, `After splice`)\n\n    let deletedMerchantCard = this.state.deletedArray.map((eachCard, index) => {\n      const discount = ((eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100).toFixed(0);\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Link, {\n        class: \"col-lg-4 col-md-6 mb-4\",\n        to: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"card-img-top\",\n        src: `https://picsum.photos/id/${Math.pow(index, 2)}/700/400`,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        class: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, eachCard.Merchant), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }\n      }, eachCard.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, \"Up to\", discount, \"%\"))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"mainDisplay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/Orderhistory\",\n      render: () => /*#__PURE__*/React.createElement(OrderHistory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }\n      }, \"By Distance\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, merchantCard), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 33\n        }\n      }, \"Expired Deals\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 33\n        }\n      }, deletedMerchantCard)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/ByDistance.js"],"names":["React","useState","Component","Route","Link","Redirect","Switch","EachMerchant","ListingContainer","OrderHistory","IndivListing","fetching","newArray","TimeLine","constructor","props","testing","prop","setTimeout","console","log","fetch","then","res","json","setState","timeLine","length","sort","a","b","uploadTimeA","Date","time","uploadTimeB","deletedArray","defunctArray","state","map","item","index","uploadTime","setMinutes","getMinutes","time_limit_min","difference","filter","method","headers","body","JSON","stringify","toBeDeleted","text","sorted","lat","lon","status","mode","componentDidMount","render","Array","nArray","radlatUser","Math","PI","radlatA","latitude","theta","longitude","radtheta","distA","sin","cos","acos","distanceA","radlatB","distB","distanceB","splice","merchantCard","eachCard","discount","unit_price","price_floor","path","merchant_id","listing_id","distance","pow","name","toFixed","description","deletedMerchantCard","Merchant"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react'\nimport { Route, Link, Redirect, Switch } from 'react-router-dom'\nimport EachMerchant from './EachMerchant/EachMerchant'\nimport ListingContainer from '../IndivStore/ListingContainer'\nimport OrderHistory from '../OrderHistory/OrderHistory'\nimport IndivListing from '../IndivStore/IndivListing'\nvar fetching = true\nvar newArray = []\n\nexport default class TimeLine extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            timeLine: [],\n            deletedArray: [],\n            filter: \"\",\n            sorted: [],\n            lat: this.props.lat,\n            lon: this.props.lon,\n            status: 'True',\n            mode: 'default'\n\n        }\n    }\n    componentDidMount() {\n        fetch('/timeline')\n            .then(res => res.json())\n            .then(res => {\n                // console.log(res);\n                this.setState({\n                    timeLine: res,\n                })\n            })\n\n        fetch('/deletedlisting')\n            .then((res) => res.json())\n            .then((res) => {\n                console.log(res)\n                if (res && res.length > 0) {\n                    res.sort(function (a, b) {\n                        const uploadTimeA = new Date(a.time)\n                        const uploadTimeB = new Date(b.time)\n                        return uploadTimeB - uploadTimeA\n                    })\n                    this.setState({\n                        deletedArray: res\n                    })\n                }\n            })\n\n    }\n\n\n    testing = (prop) => {\n\n        if (fetching === true) {\n            fetching = false\n            setTimeout(() => {\n                console.log(`fetching new list soon`)\n                fetch('/timeline')\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res, `fetched`)\n                        fetching = true\n                        this.setState({\n                            timeLine: res,\n                        })\n                    })\n            }, 5000)\n\n            setTimeout(() => {\n                console.log(`fetching deleted list soon`)\n                fetch('/deletedlisting')\n                    .then((res) => res.json())\n                    .then((res) => {\n                        if (res && res.length > 0) {\n                            res.sort(function (a, b) {\n                                const uploadTimeA = new Date(a.time)\n                                const uploadTimeB = new Date(b.time)\n                                return uploadTimeB - uploadTimeA\n                            })\n                            this.setState({\n                                deletedArray: res\n                            })\n                        }\n                    })\n            }, 5000)\n\n            setTimeout(() => {\n                let defunctArray = this.state.timeLine.map((item, index) => {\n                    const uploadTime = new Date(item.time)\n                    uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n                    let difference = +uploadTime - +new Date();\n                    if (difference < 0) {\n                        return item\n                    }\n                })\n                let newArray = defunctArray.filter((item) => {\n                    return item\n                })\n                console.log(`deleting soon`)\n                fetch('/tidyuplisting', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ toBeDeleted: newArray })\n                })\n                    .then((res) => res.text())\n                    .then((res) => {\n                        console.log(res)\n                    })\n            }, 10000)\n        }\n    }\n    render() {\n\n        let Array = this.state.timeLine.map((item, index) => {\n            const uploadTime = new Date(item.time)\n            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n            let difference = +uploadTime - +new Date();\n            if (difference > 0) {\n                return item\n            }\n        })\n        let nArray = Array.filter((item) => {\n            return item\n        })\n        let lat = this.props.lat\n        let lon = this.props.lon\n\n        nArray.sort(function (a, b) {\n            var radlatUser = Math.PI * lat / 180;\n            var radlatA = Math.PI * a.latitude / 180;\n            var theta = lon - a.longitude;\n            var radtheta = Math.PI * theta / 180;\n            var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\n            if (distA > 1) {\n                distA = 1;\n            }\n            distA = Math.acos(distA);\n            distA = distA * 180 / Math.PI;\n            distA = distA * 60 * 1.1515;\n            distA = distA * 1.609344\n            let distanceA = distA * 1.609344\n            var radlatB = Math.PI * b.latitude / 180;\n            var theta = lon - b.longitude;\n            var radtheta = Math.PI * theta / 180;\n            var distB = Math.sin(radlatUser) * Math.sin(radlatB) + Math.cos(radlatUser) * Math.cos(radlatB) * Math.cos(radtheta);\n            if (distB > 1) {\n                distB = 1;\n            }\n            distB = Math.acos(distB);\n            distB = distB * 180 / Math.PI;\n            distB = distB * 60 * 1.1515;\n            distB = distB * 1.609344\n            let distanceB = distB * 1.609344\n            console.log(a.latitude)\n            console.log(a.longitude)\n            return distanceA - distanceB\n        })\n        if (nArray.length > 20) {\n            nArray.splice(19, nArray.length - 20)\n        }\n        let merchantCard = nArray.map((eachCard, index) => {\n            const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n            let path = \"/\" + eachCard.merchant_id + \"/\" + eachCard.listing_id\n            var radlatUser = Math.PI * lat / 180;\n            var radlatA = Math.PI * eachCard.latitude / 180;\n            var theta = lon - eachCard.longitude;\n            var radtheta = Math.PI * theta / 180;\n            var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\n            if (distA > 1) {\n                distA = 1;\n            }\n            distA = Math.acos(distA);\n            distA = distA * 180 / Math.PI;\n            distA = distA * 60 * 1.1515;\n            distA = distA * 1.609344;\n            let distance = distA * 1.609344;\n            return < Link className=\"col-lg-4 col-md-6 mb-4\" to={path} >\n                <EachMerchant className=\"card h-100\" key={index} duration={eachCard.time_limit_min} time={eachCard.time} merchant_Id={eachCard.merchant_id} what={this.testing}>\n                    <img class=\"card-img-top\" src={`https://picsum.photos/id/${Math.pow(index, 2)}/700/400`} alt=\"\" />\n                    <h4>{eachCard.name} {discount.toFixed(0)}% off !</h4>\n                    <p>About {distance.toFixed(0)} km away.</p>\n                    <p class=\"card-text\">{eachCard.description}</p>\n                </EachMerchant>\n            </Link >\n        })\n        // console.log(newerArray, `After splice`)\n        let deletedMerchantCard = this.state.deletedArray.map((eachCard, index) => {\n            const discount = ((eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100).toFixed(0)\n            let path = \"/\" + eachCard.merchant_id\n            return <Link class=\"col-lg-4 col-md-6 mb-4\" to={path}>\n                <div className=\"card h-100\">\n                    <img class=\"card-img-top\" src={`https://picsum.photos/id/${Math.pow(index, 2)}/700/400`} alt=\"\" />\n                    <div className=\"card-body\">\n                        <h4 class=\"card-title\">\n                            {eachCard.Merchant}\n                        </h4>\n                        <div>{eachCard.name}</div>\n                        <div>Up to{discount}%</div>\n                    </div>\n                </div>\n            </Link>\n        })\n        return (<>\n            <div className='container'>\n                <main className=\"mainDisplay\">\n                    <Switch>\n                        <Route path=\"/Orderhistory\" render={\n                            () => <OrderHistory />\n                        } />\n                        {/* <Route path=\"/ByCategory\" render={\n                            () => <ByCategory data={this.state.timeLine} lon={this.props.lon} lat={this.props.lat} />\n                        } /> */}\n                        <Route path=\"/\" render={\n                            () => <>\n                                <h1>By Distance</h1>\n                                <div className=\"row\">{merchantCard}</div>\n                                <h1>Expired Deals</h1>\n                                <div className=\"row\">{deletedMerchantCard}</div>\n                            </>\n                        } />\n                    </Switch>\n                </main>\n            </div >\n        </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}