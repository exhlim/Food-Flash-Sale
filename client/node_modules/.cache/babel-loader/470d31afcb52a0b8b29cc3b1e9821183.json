{"ast":null,"code":"var _jsxFileName = \"/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/IndivStore/CheckoutForm.js\";\nimport React from \"react\";\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nexport default function Checkout(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      console.log(\"[PaymentMethod]\", paymentMethod);\n      fetch(\"/submitOrder\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          card: paymentMethod,\n          order: this.props.data\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      maxWidth: \"500px\",\n      margin: \"0 auto\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n}","map":{"version":3,"sources":["/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/IndivStore/CheckoutForm.js"],"names":["React","useStripe","useElements","CardElement","Checkout","props","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","fetch","method","headers","body","JSON","stringify","order","data","then","res","json","maxWidth","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,yBAApD;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBT,WAApB,CAApB,CAboC,CAepC;;AACA,UAAM;AAAEU,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEN;AAF0D,KAA3B,CAAvC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACAM,MAAAA,KAAK,CAAC,cAAD,EAAiB;AACpBC,QAAAA,MAAM,EAAE,MADY;AAEpBC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFW;AAKpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,UAAAA,IAAI,EAAEH,aADa;AAEnBY,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB;AAFC,SAAf;AALc,OAAjB,CAAL,CAUGC,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAWSC,GAAD,IAAS;AACbX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OAbH;AAcD;AACF,GAxCD;;AA0CA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KADT;AAEE,IAAA,QAAQ,EAAExB,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF;AAWD","sourcesContent":["import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\n\r\nexport default function Checkout(props) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      fetch(\"/submitOrder\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          card: paymentMethod,\r\n          order: this.props.data,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      style={{ maxWidth: \"500px\", margin: \"0 auto\" }}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}