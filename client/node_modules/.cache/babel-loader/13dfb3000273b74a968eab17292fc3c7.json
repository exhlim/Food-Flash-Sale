{"ast":null,"code":"// // import React, { useState } from 'react'\n// // import { Route, Link, Redirect, Switch } from 'react-router-dom'\n// // import EachMerchant from './EachMerchant/EachMerchantbyCategory'\n// // import ListingContainer from '../IndivStore/ListingContainer'\n// export default function ByCategory(props) {\n//     const [dropdown, setDropdown] = useState(\"Time\");\n//     let newArray = props.data.map((item, index) => {\n//         const uploadTime = new Date(item.time)\n//         uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n//         let difference = +uploadTime - +new Date();\n//         if (difference > 0) {\n//             return item\n//         }\n//     })\n//     const [sorted, setSorted] = useState(newArray)\n//     let dropDownOnChangeHandler = (e) => {\n//         switch (e.target.value) {\n//             default:\n//                 newArray.sort(function (a, b) {\n//                     const uploadTimeA = new Date(a.time)\n//                     uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min)\n//                     const uploadTimeB = new Date(b.time)\n//                     uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min)\n//                     // console.log(`A`, uploadTimeA)\n//                     // console.log(`B`, uploadTimeB)\n//                     // console.log(uploadTimeA - uploadTimeB)\n//                     return uploadTimeA - uploadTimeB\n//                 })\n//                 setSorted(newArray)\n//                 break;\n//             case \"Discount\":\n//                 newArray.sort(function (a, b) {\n//                     var Adiscount = (a.unit_price - a.price_floor) / a.unit_price * 100\n//                     var Bdiscount = (b.unit_price - b.price_floor) / b.unit_price * 100\n//                     return Bdiscount - Adiscount\n//                 })\n//                 setSorted(newArray)\n//                 break;\n//             case \"Distance\":\n//                 newArray.sort(function (a, b) {\n//                     var radlatUser = Math.PI * props.lat / 180;\n//                     var radlatA = Math.PI * a.latitude / 180;\n//                     var theta = props.lon - a.longitude;\n//                     var radtheta = Math.PI * theta / 180;\n//                     var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\n//                     if (distA > 1) {\n//                         distA = 1;\n//                     }\n//                     distA = Math.acos(distA);\n//                     distA = distA * 180 / Math.PI;\n//                     distA = distA * 60 * 1.1515;\n//                     distA = distA * 1.609344\n//                     let distanceA = distA * 1.609344\n//                     var radlatB = Math.PI * b.latitude / 180;\n//                     var theta = props.lon - b.longitude;\n//                     var radtheta = Math.PI * theta / 180;\n//                     var distB = Math.sin(radlatUser) * Math.sin(radlatB) + Math.cos(radlatUser) * Math.cos(radlatB) * Math.cos(radtheta);\n//                     if (distB > 1) {\n//                         distB = 1;\n//                     }\n//                     distB = Math.acos(distB);\n//                     distB = distB * 180 / Math.PI;\n//                     distB = distB * 60 * 1.1515;\n//                     distB = distB * 1.609344\n//                     let distanceB = distB * 1.609344\n//                     console.log(a.latitude)\n//                     console.log(a.longitude)\n//                     return distanceA - distanceB\n//                 })\n//                 setSorted(newArray)\n//                 break;\n//         }\n//     }\n//     const merchantCard = sorted.map((eachCard, index) => {\n//         const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n//         let path = \"/\" + eachCard.merchant_id\n//         return (\n//             <Link class=\"col-lg-4 col-md-6 mb-4\" to={path}>\n//                 <EachMerchant className=\"card h-100\" key={index} duration={eachCard.time_limit_min} time={eachCard.time} merchant_Id={eachCard.merchant_id}>\n//                     <img class=\"card-img-top\" src=\"https://picsum.photos/700/400\" alt=\"\" />\n//                     <h4>{eachCard.name} {discount}%</h4>\n//                     <p class=\"card-text\">Lorem ipsum dolor sit amet</p>\n//                 </EachMerchant>\n//             </Link>)\n//     })\n//     const routeArray = newArray.map((eachCard, index) => {\n//         let path = \"/\" + eachCard.merchant_id\n//         return <Route path={path} render={\n//             () => <ListingContainer listing_id={eachCard.listing_id} merchant_id={eachCard.merchant_id} stripper={this.props.stripper} />\n//         } />\n//     })\n//     return (\n//         <div>\n//             {merchantCard}\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["/Users/eugenelim/Desktop/wdi/SEI-24-Project-3/client/src/Components/User/TimeLine/housekeeping switch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// // import React, { useState } from 'react'\r\n// // import { Route, Link, Redirect, Switch } from 'react-router-dom'\r\n// // import EachMerchant from './EachMerchant/EachMerchantbyCategory'\r\n// // import ListingContainer from '../IndivStore/ListingContainer'\r\n\r\n\r\n// export default function ByCategory(props) {\r\n\r\n//     const [dropdown, setDropdown] = useState(\"Time\");\r\n\r\n//     let newArray = props.data.map((item, index) => {\r\n//         const uploadTime = new Date(item.time)\r\n//         uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\r\n//         let difference = +uploadTime - +new Date();\r\n//         if (difference > 0) {\r\n//             return item\r\n//         }\r\n//     })\r\n//     const [sorted, setSorted] = useState(newArray)\r\n\r\n//     let dropDownOnChangeHandler = (e) => {\r\n\r\n//         switch (e.target.value) {\r\n//             default:\r\n//                 newArray.sort(function (a, b) {\r\n//                     const uploadTimeA = new Date(a.time)\r\n//                     uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min)\r\n//                     const uploadTimeB = new Date(b.time)\r\n//                     uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min)\r\n//                     // console.log(`A`, uploadTimeA)\r\n//                     // console.log(`B`, uploadTimeB)\r\n//                     // console.log(uploadTimeA - uploadTimeB)\r\n//                     return uploadTimeA - uploadTimeB\r\n//                 })\r\n//                 setSorted(newArray)\r\n//                 break;\r\n//             case \"Discount\":\r\n//                 newArray.sort(function (a, b) {\r\n//                     var Adiscount = (a.unit_price - a.price_floor) / a.unit_price * 100\r\n//                     var Bdiscount = (b.unit_price - b.price_floor) / b.unit_price * 100\r\n//                     return Bdiscount - Adiscount\r\n//                 })\r\n//                 setSorted(newArray)\r\n//                 break;\r\n//             case \"Distance\":\r\n//                 newArray.sort(function (a, b) {\r\n//                     var radlatUser = Math.PI * props.lat / 180;\r\n//                     var radlatA = Math.PI * a.latitude / 180;\r\n//                     var theta = props.lon - a.longitude;\r\n//                     var radtheta = Math.PI * theta / 180;\r\n//                     var distA = Math.sin(radlatUser) * Math.sin(radlatA) + Math.cos(radlatUser) * Math.cos(radlatA) * Math.cos(radtheta);\r\n//                     if (distA > 1) {\r\n//                         distA = 1;\r\n//                     }\r\n//                     distA = Math.acos(distA);\r\n//                     distA = distA * 180 / Math.PI;\r\n//                     distA = distA * 60 * 1.1515;\r\n//                     distA = distA * 1.609344\r\n//                     let distanceA = distA * 1.609344\r\n//                     var radlatB = Math.PI * b.latitude / 180;\r\n//                     var theta = props.lon - b.longitude;\r\n//                     var radtheta = Math.PI * theta / 180;\r\n//                     var distB = Math.sin(radlatUser) * Math.sin(radlatB) + Math.cos(radlatUser) * Math.cos(radlatB) * Math.cos(radtheta);\r\n//                     if (distB > 1) {\r\n//                         distB = 1;\r\n//                     }\r\n//                     distB = Math.acos(distB);\r\n//                     distB = distB * 180 / Math.PI;\r\n//                     distB = distB * 60 * 1.1515;\r\n//                     distB = distB * 1.609344\r\n//                     let distanceB = distB * 1.609344\r\n//                     console.log(a.latitude)\r\n//                     console.log(a.longitude)\r\n//                     return distanceA - distanceB\r\n//                 })\r\n//                 setSorted(newArray)\r\n//                 break;\r\n\r\n//         }\r\n//     }\r\n\r\n//     const merchantCard = sorted.map((eachCard, index) => {\r\n//         const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\r\n//         let path = \"/\" + eachCard.merchant_id\r\n//         return (\r\n\r\n//             <Link class=\"col-lg-4 col-md-6 mb-4\" to={path}>\r\n//                 <EachMerchant className=\"card h-100\" key={index} duration={eachCard.time_limit_min} time={eachCard.time} merchant_Id={eachCard.merchant_id}>\r\n//                     <img class=\"card-img-top\" src=\"https://picsum.photos/700/400\" alt=\"\" />\r\n//                     <h4>{eachCard.name} {discount}%</h4>\r\n//                     <p class=\"card-text\">Lorem ipsum dolor sit amet</p>\r\n//                 </EachMerchant>\r\n//             </Link>)\r\n//     })\r\n\r\n\r\n\r\n//     const routeArray = newArray.map((eachCard, index) => {\r\n//         let path = \"/\" + eachCard.merchant_id\r\n//         return <Route path={path} render={\r\n//             () => <ListingContainer listing_id={eachCard.listing_id} merchant_id={eachCard.merchant_id} stripper={this.props.stripper} />\r\n//         } />\r\n//     })\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             {merchantCard}\r\n//         </div>\r\n//     )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}