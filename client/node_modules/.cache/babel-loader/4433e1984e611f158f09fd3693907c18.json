{"ast":null,"code":"var _jsxFileName = \"/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/GeoLocation/GeoLocation.js\";\nimport React from \"react\";\nimport TimeLine from \"../TimeLine/TimeLine\";\nexport default class GeoLocation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      latUser: 0,\n      lonUser: 0\n    };\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"geolocation available\");\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        this.setState({\n          latUser: lat,\n          lonUser: lon\n        });\n      });\n    } else {\n      console.log(\"geolocation not available\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"latitude: \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }\n    }, this.state.latUser, \"\\xB0\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), \"longitude: \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }\n    }, this.state.lonUser, \"\\xB0\"), /*#__PURE__*/React.createElement(TimeLine, {\n      lon: this.state.lonUser,\n      lat: this.state.latUser,\n      onLogout: this.props.onLogout,\n      stripper: this.props.stripper,\n      user_id: this.props.user_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aurelialim/wdi/SEI-24-Project-3/client/src/Components/User/GeoLocation/GeoLocation.js"],"names":["React","TimeLine","GeoLocation","Component","constructor","state","latUser","lonUser","componentDidMount","navigator","console","log","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","setState","render","props","onLogout","stripper","user_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,iBAAiBC,SAArB,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,MAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA5B;AACA,aAAKC,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAES,GAAX;AAAgBR,UAAAA,OAAO,EAAEW;AAAzB,SAAd;AACD,OAJD;AAKD,KAPD,MAOO;AACLR,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACY;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKhB,KAAL,CAAWC,OAAhC,SADZ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,8BAGa;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKD,KAAL,CAAWE,OAAjC,SAHb,eAIE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,OADlB;AAEE,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,OAFlB;AAGE,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWC,QAHvB;AAIE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAJvB;AAKE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAcD;;AArCsD","sourcesContent":["import React from \"react\";\nimport TimeLine from \"../TimeLine/TimeLine\";\n\nexport default class GeoLocation extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      latUser: 0,\n      lonUser: 0,\n    };\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      console.log(\"geolocation available\");\n      navigator.geolocation.getCurrentPosition((position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        this.setState({ latUser: lat, lonUser: lon });\n      });\n    } else {\n      console.log(\"geolocation not available\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        latitude: <span id=\"latitude\">{this.state.latUser}&deg;</span>\n        <br />\n        longitude: <span id=\"longitude\">{this.state.lonUser}&deg;</span>\n        <TimeLine\n          lon={this.state.lonUser}\n          lat={this.state.latUser}\n          onLogout={this.props.onLogout}\n          stripper={this.props.stripper}\n          user_id={this.props.user_id}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}