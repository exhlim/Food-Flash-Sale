{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js\";\nimport React, { Component } from 'react';\nimport EachMerchant from './EachMerchant/EachMerchant';\nimport OrderHistory from '../OrderHistory/OrderHistory';\nimport { Route, Link, Redirect, Switch } from 'react-router-dom';\nimport IndivListing from '../IndivStore/IndivListing';\nimport ListingContainer from '../IndivStore/ListingContainer';\nexport default class TimeLine extends Component {\n  constructor(props) {\n    super();\n\n    this.fetcherino = () => {};\n\n    this.testing = (timeleft, merchantID) => {\n      if (timeleft === 0) {\n        let timeOut = this.state.timeLine.filter(card => {\n          card.merchant_id === merchantID;\n        });\n\n        if (timeOut.length > 0) {\n          // let newTimeLine = this.state.timeLine\n          // timeOut.forEach(card1 => newTimeLine.splice(newTimeLine.findIndex(card2 => card2.name === card1.name)))\n          this.setState({\n            oldTimeLine: timeOut\n          });\n          fetch('/timeline').then(res => res.json()).then(res => {\n            console.log(res);\n            this.setState({\n              timeLine: res,\n              oldTimeLine: timeOut\n            });\n          });\n        }\n      }\n\n      if (b === 4) {}\n    };\n\n    this.state = {\n      timeLine: [],\n      oldTimeLine: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/timeline').then(res => res.json()).then(res => {\n      // console.log(res);\n      this.setState({\n        timeLine: res\n      });\n    });\n  }\n\n  // testing = (prop) => {\n  //     let b = Math.floor(Math.random() * 30)\n  //     console.log(b)\n  //     if (b === 4) {\n  //         fetch('/timeline')\n  //             .then(res => res.json())\n  //             .then(res => {\n  //                 console.log(res)\n  //                 this.setState({\n  //                     timeLine: res,\n  //                     fetch: !this.state.fetch\n  //                 })\n  //             })\n  //     }\n  // }\n  render() {\n    let newArray = this.state.timeLine.map((item, index) => {\n      const uploadTime = new Date(item.time);\n      uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min);\n      let difference = +uploadTime - +new Date();\n\n      if (difference > 0) {\n        return item;\n      }\n    });\n    let newerArray = newArray.filter(item => {\n      return item;\n    });\n    newerArray.sort(function (a, b) {\n      const uploadTimeA = new Date(a.time);\n      uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min);\n      const uploadTimeB = new Date(b.time);\n      uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min);\n      return uploadTimeA - uploadTimeB;\n    }); // console.log(newerArray, `before splice`)\n\n    if (newerArray.length > 20) {\n      newerArray.splice(19, newerArray.length - 20);\n    } // console.log(newerArray, `After splice`)\n\n\n    let merchantCard = newerArray.map((eachCard, index) => {\n      const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100;\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Link, {\n        to: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(EachMerchant, {\n        key: index,\n        duration: eachCard.time_limit_min,\n        listing: eachCard.listing_id,\n        time: eachCard.time,\n        merchant_Id: eachCard.merchant_id,\n        unmount: this.merchantCardUnmountHandler,\n        what: this.testing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, eachCard.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"up to\", discount, \"%\")));\n    });\n    const routeArray = newerArray.map((eachCard, index) => {\n      let path = \"/\" + eachCard.merchant_id;\n      return /*#__PURE__*/React.createElement(Route, {\n        path: path,\n        render: () => /*#__PURE__*/React.createElement(ListingContainer, {\n          merchant_id: eachCard.merchant_id,\n          stripper: this.props.stripper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Image here\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Timeline\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"login break\",\n      to: \"/Orderhistory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Order history\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, routeArray, /*#__PURE__*/React.createElement(Route, {\n      path: \"/Orderhistory\",\n      render: () => /*#__PURE__*/React.createElement(OrderHistory, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 35\n        }\n      }, merchantCard),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/TimeLine/TimeLine.js"],"names":["React","Component","EachMerchant","OrderHistory","Route","Link","Redirect","Switch","IndivListing","ListingContainer","TimeLine","constructor","props","fetcherino","testing","timeleft","merchantID","timeOut","state","timeLine","filter","card","merchant_id","length","setState","oldTimeLine","fetch","then","res","json","console","log","b","componentDidMount","render","newArray","map","item","index","uploadTime","Date","time","setMinutes","getMinutes","time_limit_min","difference","newerArray","sort","a","uploadTimeA","uploadTimeB","splice","merchantCard","eachCard","discount","unit_price","price_floor","path","listing_id","merchantCardUnmountHandler","name","routeArray","stripper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EachMerchant from './EachMerchant/EachMerchant'\nimport OrderHistory from '../OrderHistory/OrderHistory'\nimport { Route, Link, Redirect, Switch } from 'react-router-dom'\nimport IndivListing from '../IndivStore/IndivListing'\nimport ListingContainer from '../IndivStore/ListingContainer'\n\nexport default class TimeLine extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n            timeLine: [],\n            oldTimeLine: []\n        }\n    }\n    componentDidMount() {\n        fetch('/timeline')\n            .then(res => res.json())\n            .then(res => {\n                // console.log(res);\n                this.setState({\n                    timeLine: res\n                })\n            })\n    }\n\n    fetcherino = () => {\n\n    }\n\n    testing = (timeleft, merchantID) => {\n        if (timeleft === 0) {\n            let timeOut = this.state.timeLine.filter(card => { card.merchant_id === merchantID })\n            if (timeOut.length > 0) {\n                // let newTimeLine = this.state.timeLine\n                // timeOut.forEach(card1 => newTimeLine.splice(newTimeLine.findIndex(card2 => card2.name === card1.name)))\n                this.setState({\n                    oldTimeLine: timeOut\n                })\n                fetch('/timeline')\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        this.setState({\n                            timeLine: res,\n                            oldTimeLine: timeOut\n                        })\n                    })\n            }\n\n        }\n        if (b === 4) {\n\n        }\n    }\n\n    // testing = (prop) => {\n    //     let b = Math.floor(Math.random() * 30)\n    //     console.log(b)\n    //     if (b === 4) {\n    //         fetch('/timeline')\n    //             .then(res => res.json())\n    //             .then(res => {\n    //                 console.log(res)\n    //                 this.setState({\n    //                     timeLine: res,\n    //                     fetch: !this.state.fetch\n    //                 })\n    //             })\n    //     }\n    // }\n\n\n    render() {\n        let newArray = this.state.timeLine.map((item, index) => {\n            const uploadTime = new Date(item.time)\n            uploadTime.setMinutes(uploadTime.getMinutes() + item.time_limit_min)\n            let difference = +uploadTime - +new Date();\n            if (difference > 0) {\n                return item\n            }\n        })\n        let newerArray = newArray.filter((item) => {\n            return item\n        })\n\n\n        newerArray.sort(function (a, b) {\n            const uploadTimeA = new Date(a.time)\n            uploadTimeA.setMinutes(uploadTimeA.getMinutes() + a.time_limit_min)\n            const uploadTimeB = new Date(b.time)\n            uploadTimeB.setMinutes(uploadTimeB.getMinutes() + b.time_limit_min)\n            return uploadTimeA - uploadTimeB\n        })\n        // console.log(newerArray, `before splice`)\n        if (newerArray.length > 20) {\n            newerArray.splice(19, newerArray.length - 20)\n        }\n        // console.log(newerArray, `After splice`)\n        let merchantCard = newerArray.map((eachCard, index) => {\n            const discount = (eachCard.unit_price - eachCard.price_floor) / eachCard.unit_price * 100\n            let path = \"/\" + eachCard.merchant_id\n            return <Link to={path}>\n\n                <EachMerchant key={index} duration={eachCard.time_limit_min} listing={eachCard.listing_id} time={eachCard.time} merchant_Id={eachCard.merchant_id} unmount={this.merchantCardUnmountHandler} what={this.testing}>\n                    <div>{eachCard.name}</div>\n                    <div>up to{discount}%</div>\n                </EachMerchant>\n\n            </Link>\n        })\n\n        const routeArray = newerArray.map((eachCard, index) => {\n            let path = \"/\" + eachCard.merchant_id\n            return <Route path={path} render={\n                () => <ListingContainer merchant_id={eachCard.merchant_id} stripper={this.props.stripper} />\n            } />\n        })\n        return (\n            <div>\n                <div className=\"navbar\">\n                    <div>Image here</div>\n                    <Link className=\"login break\" to=\"/Timeline\">Timeline</Link>\n                    <Link className=\"login break\" to=\"/Orderhistory\">Order history</Link>\n                </div>\n                <main>\n                    <Switch>\n                        {routeArray}\n                        <Route path=\"/Orderhistory\" render={\n                            () => <OrderHistory />\n                        } />\n                        <Route path=\"/\" render={\n                            () => <div>{merchantCard}</div>\n                        } />\n                    </Switch>\n                </main>\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}