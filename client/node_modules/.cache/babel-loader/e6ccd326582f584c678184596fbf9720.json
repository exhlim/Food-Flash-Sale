{"ast":null,"code":"var _jsxFileName = \"/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/IndivStore/ListingContainer.js\";\nimport React from \"react\";\nimport IndivListing from \"./IndivListing\";\nimport Basket from \"./Basket\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport PaymentOverlay from \"./PaymentOverlay\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nexport default class ListingContainer extends React.Component {\n  constructor(props) {\n    //mounting\n    super(props);\n    console.log(\"----inside Listing constructor\");\n    this.state = {\n      merchant_id: props.merchant_id,\n      merchant_name: \"\",\n      merchant_img: \"\",\n      html: [],\n      result: [],\n      cart: [],\n      viewCart: false,\n      checkout: false,\n      listing_id: props.listing_id\n    }; // this.addToCart = this.addToCart.bind(this);\n\n    this.navigateTo = this.navigateTo.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleCheckOut = this.handleCheckOut.bind(this);\n  } //\n  //payment click handlling\n\n\n  handleCheckOut() {\n    this.setState({\n      checkout: true\n    });\n  } //delete from cart\n\n\n  handleRemoveFromCart(e, item) {\n    if (this.state.cart[0]) {\n      this.setState(state => {\n        const cart = state.cart.filter(element => element.name != item.name);\n        localStorage.setItem(\"cart\", cart);\n        return {\n          cart\n        };\n      });\n    }\n  } //   //add to cart button\n  //   addToCart(e, addToCart) {\n  //     console.log(addToCart);\n  //     this.setState((prevState) => ({ cart: [...prevState.cart, addToCart] }));\n  //   }\n  // view cart button\n\n\n  navigateTo() {\n    if (this.state.cart[0]) {\n      this.setState({\n        viewCart: !this.state.viewCart\n      });\n    }\n  } //add to cart button\n\n\n  handleAddToCart(e, product) {\n    console.log(product);\n    this.setState(state => {\n      const cart = state.cart;\n      let productAlreadyInCart = false;\n      cart.forEach(item => {\n        if (item.name === product.name) {\n          if (item.count / 2 < product.quantity) {\n            productAlreadyInCart = true;\n            item.count++;\n          } else {\n            productAlreadyInCart = true;\n          }\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        if (product.quantity > 0) {\n          cart.push({ ...product,\n            count: 1\n          });\n        }\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      console.log(this.state.cart, \"----cart\");\n      return cart;\n    });\n  } //when state is changed, FETCH results from aPI\n  //side effects ie: HTTP requests are allowed here\n\n\n  componentDidMount() {\n    fetch(`/indivshop/${this.state.listing_id}`).then(res => res.json()).then(res => this.setState({\n      result: res,\n      html: this.format(res),\n      merchant_name: res[0].name\n    }));\n  } //update and re-render once checkout is clicked and this.state.checkout=true;\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.checkout !== this.state.checkout) {\n  //     return <PaymentOverlay />;\n  //   }\n  // }\n  //helper functions\n  //take the res.json and convert into nice HTML\n\n\n  format(array) {\n    let item_name = array[0].item_name;\n    let quantity = array[0].quantity;\n    let discPrice = array[0].price_ceiling;\n    let originalPrice = array[0].unit_price;\n    let discount = ((originalPrice - discPrice) / originalPrice).toFixed(2);\n    let merchant_name = array[0].name;\n    let cuisine = array[0].cuisine;\n    let listing_id = array[0].listing_id;\n    let merchant_id = array[0].merchant_id;\n    return /*#__PURE__*/React.createElement(IndivListing, {\n      item_name: item_name,\n      quantity: quantity,\n      discPrice: discPrice,\n      originalPrice: originalPrice,\n      discPrice: discPrice,\n      discount: discount,\n      merchant_name: merchant_name,\n      cuisine: cuisine,\n      onClick: this.handleAddToCart,\n      onDel: this.handleRemoveFromCart,\n      listing_id: listing_id,\n      merchant_id: merchant_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper); // if (this.state.checkout) {\n    //     return (\n    //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n    //     )\n    // }\n\n    let data = {};\n\n    if (this.state.cart[0]) {\n      let data = {\n        merchant_id: this.state.cart[0].merchant_id,\n        //user_id:\n        name: this.state.cart[0].name,\n        user_id: this.state.cart[0].user_id,\n        listing_id: this.state.cart[0].listing_id,\n        price: this.state.cart[0].price,\n        quantity: this.state.cart[0].count / 2,\n        revenue: this.state.cart[0].count / 2 * this.state.cart[0].price\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"You are viewing deals from \", this.state.merchant_name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ListItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, this.state.html), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.navigateTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"View Cart \", this.state.cart.length), this.state.viewCart ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, \"Order Summary\"), /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        maxWidth: \"300px\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Item Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"Total\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, this.state.cart[0].name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, this.state.cart[0].count / 2), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, \"Total: $\", this.state.cart[0].count / 2 * this.state.cart[0].price))), /*#__PURE__*/React.createElement(Elements, {\n      stripe: stripePromise,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CheckoutForm, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }))) : null));\n  }\n\n} // if (this.state.viewCart && this.state.cart[0]) {\n//   let data = {\n//     merchant_id: this.state.cart[0].merchant_id,\n//     //user_id:\n//     name: this.state.cart[0].name,\n//     user_id: this.state.cart[0].user_id,\n//     listing_id: this.state.cart[0].listing_id,\n//     price: this.state.cart[0].price,\n//     quantity: this.state.cart[0].count / 2,\n//     revenue: (this.state.cart[0].count / 2) * this.state.cart[0].price,\n//   };\n//   return (\n//     <div>\n//       <div>\n//         <h1>You are viewing deals from {this.state.merchant_name}</h1>\n//         <br />\n//         <div className=\"ListItems\">{this.state.html}</div>\n//         <button onClick={this.navigateTo}>\n//           View Cart {this.state.cart.length}\n//         </button>\n//         <h1>Order Summary</h1>\n//         <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n//           <tr>\n//             <th>Item Name</th>\n//             <th>Quantity</th>\n//             <th>Total</th>\n//           </tr>\n//           <tr>\n//             <td>{this.state.cart[0].name}</td>\n//             <td>{this.state.cart[0].count / 2}</td>\n//             <td>\n//               Total: $\n//               {(this.state.cart[0].count / 2) * this.state.cart[0].price}\n//             </td>\n//           </tr>\n//         </table>\n//         <Elements stripe={stripePromise}>\n//           <CheckoutForm data={data}></CheckoutForm>\n//         </Elements>\n//       </div>\n//     </div>\n//   );\n// } else {\n//   return (\n//     <>\n//       <h1>You are viewing deals from {this.state.merchant_name}</h1>\n//       <br />\n//       <div className=\"ListItems\">{this.state.html}</div>\n//       <button onClick={this.navigateTo}>\n//         View Cart {this.state.cart.length}\n//       </button>\n//     </>\n//   );\n// }\n// }\n// }","map":{"version":3,"sources":["/home/rlyz/wdi/sei-24-project-3/client/src/Components/User/IndivStore/ListingContainer.js"],"names":["React","IndivListing","Basket","CheckoutForm","PaymentOverlay","Elements","loadStripe","ListingContainer","Component","constructor","props","console","log","state","merchant_id","merchant_name","merchant_img","html","result","cart","viewCart","checkout","listing_id","navigateTo","bind","handleAddToCart","handleRemoveFromCart","handleCheckOut","setState","e","item","filter","element","name","localStorage","setItem","product","productAlreadyInCart","forEach","count","quantity","push","JSON","stringify","componentDidMount","fetch","then","res","json","format","array","item_name","discPrice","price_ceiling","originalPrice","unit_price","discount","toFixed","cuisine","render","stripePromise","stripper","data","user_id","price","revenue","length","maxWidth","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IndivListing from \"./IndivListing\";\nimport Basket from \"./Basket\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport PaymentOverlay from \"./PaymentOverlay\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nexport default class ListingContainer extends React.Component {\n  constructor(props) {\n    //mounting\n    super(props);\n    console.log(\"----inside Listing constructor\");\n\n    this.state = {\n      merchant_id: props.merchant_id,\n      merchant_name: \"\",\n      merchant_img: \"\",\n      html: [],\n      result: [],\n      cart: [],\n      viewCart: false,\n      checkout: false,\n      listing_id: props.listing_id,\n    };\n\n    // this.addToCart = this.addToCart.bind(this);\n    this.navigateTo = this.navigateTo.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleCheckOut = this.handleCheckOut.bind(this);\n  }\n  //\n\n  //payment click handlling\n  handleCheckOut() {\n    this.setState({ checkout: true });\n  }\n\n  //delete from cart\n  handleRemoveFromCart(e, item) {\n    if (this.state.cart[0]) {\n      this.setState((state) => {\n        const cart = state.cart.filter((element) => element.name != item.name);\n        localStorage.setItem(\"cart\", cart);\n        return { cart };\n      });\n    }\n  }\n\n  //   //add to cart button\n  //   addToCart(e, addToCart) {\n  //     console.log(addToCart);\n  //     this.setState((prevState) => ({ cart: [...prevState.cart, addToCart] }));\n  //   }\n\n  // view cart button\n  navigateTo() {\n    if (this.state.cart[0]) {\n      this.setState({ viewCart: !this.state.viewCart });\n    }\n  }\n  //add to cart button\n  handleAddToCart(e, product) {\n    console.log(product);\n\n    this.setState((state) => {\n      const cart = state.cart;\n      let productAlreadyInCart = false;\n      cart.forEach((item) => {\n        if (item.name === product.name) {\n          if (item.count / 2 < product.quantity) {\n            productAlreadyInCart = true;\n            item.count++;\n          } else {\n            productAlreadyInCart = true;\n          }\n        }\n      });\n      if (!productAlreadyInCart) {\n        if (product.quantity > 0) {\n          cart.push({ ...product, count: 1 });\n        }\n      }\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      console.log(this.state.cart, \"----cart\");\n      return cart;\n    });\n  }\n\n  //when state is changed, FETCH results from aPI\n  //side effects ie: HTTP requests are allowed here\n  componentDidMount() {\n    fetch(`/indivshop/${this.state.listing_id}`)\n      .then((res) => res.json())\n      .then((res) =>\n        this.setState({\n          result: res,\n          html: this.format(res),\n          merchant_name: res[0].name,\n        })\n      );\n  }\n\n  //update and re-render once checkout is clicked and this.state.checkout=true;\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.checkout !== this.state.checkout) {\n  //     return <PaymentOverlay />;\n  //   }\n  // }\n\n  //helper functions\n\n  //take the res.json and convert into nice HTML\n  format(array) {\n    let item_name = array[0].item_name;\n    let quantity = array[0].quantity;\n    let discPrice = array[0].price_ceiling;\n    let originalPrice = array[0].unit_price;\n    let discount = ((originalPrice - discPrice) / originalPrice).toFixed(2);\n    let merchant_name = array[0].name;\n    let cuisine = array[0].cuisine;\n    let listing_id = array[0].listing_id;\n    let merchant_id = array[0].merchant_id;\n\n    return (\n      <IndivListing\n        item_name={item_name}\n        quantity={quantity}\n        discPrice={discPrice}\n        originalPrice={originalPrice}\n        discPrice={discPrice}\n        discount={discount}\n        merchant_name={merchant_name}\n        cuisine={cuisine}\n        onClick={this.handleAddToCart}\n        onDel={this.handleRemoveFromCart}\n        listing_id={listing_id}\n        merchant_id={merchant_id}\n      />\n    );\n  }\n\n  render() {\n    const stripePromise = loadStripe(this.props.stripper);\n    // if (this.state.checkout) {\n    //     return (\n    //         <div><PaymentOverlay cart={this.state.cart} stripper={this.props.stripper} /></div>\n\n    //     )\n    // }\n    let data = {}\n    if (this.state.cart[0]) {\n      let data = {\n        merchant_id: this.state.cart[0].merchant_id,\n        //user_id:\n        name: this.state.cart[0].name,\n        user_id: this.state.cart[0].user_id,\n        listing_id: this.state.cart[0].listing_id,\n        price: this.state.cart[0].price,\n        quantity: this.state.cart[0].count / 2,\n        revenue: (this.state.cart[0].count / 2) * this.state.cart[0].price,\n      };\n    }\n    return (\n      <div>\n        <div>\n          <h1>You are viewing deals from {this.state.merchant_name}</h1>\n          <br />\n          <div className=\"ListItems\">{this.state.html}</div>\n          <button onClick={this.navigateTo}>\n            View Cart {this.state.cart.length}\n          </button>\n          {this.state.viewCart ?\n            <>\n              <h1>Order Summary</h1>\n              <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n                <tr>\n                  <th>Item Name</th>\n                  <th>Quantity</th>\n                  <th>Total</th>\n                </tr>\n                <tr>\n                  <td>{this.state.cart[0].name}</td>\n                  <td>{this.state.cart[0].count / 2}</td>\n                  <td>\n                    Total: $\n                  {(this.state.cart[0].count / 2) * this.state.cart[0].price}\n                  </td>\n                </tr>\n              </table>\n              <Elements stripe={stripePromise}>\n                <CheckoutForm data={data}></CheckoutForm>\n              </Elements>\n            </> : null}\n        </div>\n\n      </div>\n    );\n\n  }\n}\n\n\n\n\n// if (this.state.viewCart && this.state.cart[0]) {\n//   let data = {\n//     merchant_id: this.state.cart[0].merchant_id,\n//     //user_id:\n//     name: this.state.cart[0].name,\n//     user_id: this.state.cart[0].user_id,\n//     listing_id: this.state.cart[0].listing_id,\n//     price: this.state.cart[0].price,\n//     quantity: this.state.cart[0].count / 2,\n//     revenue: (this.state.cart[0].count / 2) * this.state.cart[0].price,\n//   };\n//   return (\n//     <div>\n//       <div>\n//         <h1>You are viewing deals from {this.state.merchant_name}</h1>\n//         <br />\n//         <div className=\"ListItems\">{this.state.html}</div>\n//         <button onClick={this.navigateTo}>\n//           View Cart {this.state.cart.length}\n//         </button>\n//         <h1>Order Summary</h1>\n//         <table style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n//           <tr>\n//             <th>Item Name</th>\n//             <th>Quantity</th>\n//             <th>Total</th>\n//           </tr>\n//           <tr>\n//             <td>{this.state.cart[0].name}</td>\n//             <td>{this.state.cart[0].count / 2}</td>\n//             <td>\n//               Total: $\n//               {(this.state.cart[0].count / 2) * this.state.cart[0].price}\n//             </td>\n//           </tr>\n//         </table>\n\n//         <Elements stripe={stripePromise}>\n//           <CheckoutForm data={data}></CheckoutForm>\n//         </Elements>\n//       </div>\n\n//     </div>\n//   );\n// } else {\n//   return (\n//     <>\n//       <h1>You are viewing deals from {this.state.merchant_name}</h1>\n//       <br />\n\n//       <div className=\"ListItems\">{this.state.html}</div>\n//       <button onClick={this.navigateTo}>\n//         View Cart {this.state.cart.length}\n//       </button>\n//     </>\n//   );\n// }\n// }\n// }"]},"metadata":{},"sourceType":"module"}